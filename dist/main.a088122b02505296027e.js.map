{"version":3,"sources":["webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/raven-js/src/singleton.js","webpack:///./node_modules/raven-js/src/utils.js","webpack:///./node_modules/raven-js/src/console.js","webpack:///./src/index.js","webpack:///./src/api/userApi.js","webpack:///./src/api/baseUrl.js","webpack:///./node_modules/raven-js/src/raven.js","webpack:///./node_modules/raven-js/vendor/TraceKit/tracekit.js","webpack:///./node_modules/raven-js/vendor/json-stringify-safe/stringify.js","webpack:///./node_modules/raven-js/src/configError.js","webpack:///./buildScripts/config.js","webpack:///./node_modules/raven-js/plugins/console.js"],"names":["g","this","Function","eval","e","window","module","exports","global","RavenConstructor","__webpack_require__","_window","self","_Raven","Raven","noConflict","afterLoad","isUndefined","what","isString","Object","prototype","toString","call","supportsErrorEvent","ErrorEvent","each","obj","callback","i","j","length","hasKey","object","key","hasOwnProperty","htmlElementAsString","elem","className","classes","attr","out","tagName","push","toLowerCase","id","split","attrWhitelist","getAttribute","join","isOnlyOneTruthy","a","b","isSameStacktrace","stack1","stack2","frames1","frames","frames2","filename","lineno","colno","isObject","isError","value","Error","isErrorEvent","isFunction","isArray","isEmptyObject","_","supportsFetch","Headers","Request","Response","wrappedCallback","data","original","normalizedData","objectMerge","obj1","obj2","truncate","str","max","substr","objectFrozen","isFrozen","joinRegExp","patterns","pattern","sources","len","replace","source","RegExp","urlencode","o","pairs","encodeURIComponent","uuid4","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","c","r","Math","random","htmlTreeAsString","nextStr","height","sepLength","parentNode","reverse","isSameException","ex1","ex2","values","type","isBothUndefined","stacktrace","parseUrl","url","match","query","fragment","protocol","host","path","relative","fill","name","replacement","track","orig","__raven__","__orig__","wrapMethod","console","level","originalConsoleLevel","originalConsole","sentryLevel","args","slice","arguments","msg","logger","extra","apply","_config","_ravenJs2","default","config","sentry_url","install","addPlugin","users","_userApi2","getUsers","then","result","usersBody","forEach","user","firstName","lastName","email","document","getElementById","innerHTML","deleteLinks","getElementsByClassName","Array","from","link","onclick","event","element","target","preventDefault","deleteUser","attributes","row","removeChild","Users","_classCallCheck","baseUrl","_baseUrl2","get","del","fetch","headers","Content-Type","Accept","onSuccess","onError","request","method","messages","log","response","json","error","location","href","results","exec","decodeURIComponent","getQueryStringParameterByName","now","Date","keepOriginalCallback","_hasJSON","JSON","stringify","_hasDocument","_document","_hasNavigator","_navigator","_lastCapturedException","_lastData","_lastEventId","_globalServer","_globalKey","_globalProject","_globalContext","_globalOptions","ignoreErrors","ignoreUrls","whitelistUrls","includePaths","collectWindowErrors","maxMessageLength","maxUrlLength","stackTraceLimit","autoBreadcrumbs","instrument","sampleRate","_ignoreOnError","_isRavenInstalled","_originalErrorStackTraceLimit","_originalConsole","_originalConsoleMethods","_plugins","_startTime","_wrappedBuiltIns","_breadcrumbs","_lastCapturedEvent","_keypressTimeout","_location","_lastHref","_resetBackoff","TraceKit","RavenConfigError","utils","wrapConsoleMethod","dsnKeys","dsnPattern","navigator","VERSION","debug","dsn","options","_logDebug","globalOptions","setDSN","maxBreadcrumbs","min","autoBreadcrumbDefaults","xhr","dom","sentry","instrumentDefaults","tryCatch","isSetup","report","subscribe","_handleOnErrorStackInfo","_patchFunctionToString","_instrumentTryCatch","_instrumentBreadcrumbs","_drainPlugins","uri","_parseDSN","lastSlash","lastIndexOf","_dsn","_globalSecret","pass","_getGlobalServer","_globalEndpoint","context","func","undefined","wrap","_before","wrapped","deep","_ignoreNextOnError","captureException","__raven_wrapper__","property","uninstall","_unpatchFunctionToString","_restoreBuiltIns","ex","isNotError","isNotErrorEvent","isErrorEventWithoutError","captureMessage","trimHeadFrames","stack","computeStackTrace","_handleStackInfo","test","message","initialCall","fileurl","fingerprint","_prepareFrames","_send","captureBreadcrumb","crumb","timestamp","breadcrumbCallback","shift","plugin","pluginArgs","setUserContext","setExtraContext","_mergeContext","setTagsContext","tags","clearContext","getContext","parse","setEnvironment","environment","setRelease","release","setDataCallback","dataCallback","setBreadcrumbCallback","setShouldSendCallback","shouldSendCallback","setTransport","transport","lastException","lastEventId","ravenNotConfiguredError","RavenConfig","showReportDialog","eventId","encode","qs","globalServer","script","createElement","async","src","head","body","appendChild","setTimeout","_triggerEvent","eventType","evt","toUpperCase","createEvent","initEvent","createEventObject","dispatchEvent","fireEvent","_breadcrumbEventHandler","evtName","category","_keypressEventHandler","isContentEditable","timeout","clearTimeout","_captureUrlChange","to","parsedLoc","parsedTo","parsedFrom","_originalFunctionToString","wrapTimeFn","fn","t","originalCallback","wrapEventTarget","proto","capture","secure","handleEvent","err","before","clickHandler","keypressHandler","wrappedBuiltIns","requestAnimationFrame","cb","eventTargets","wrapProp","prop","xhrproto","XMLHttpRequest","origOpen","indexOf","__raven_xhr","status_code","origSend","onreadystatechangeHandler","readyState","status","props","onreadystatechange","origFetch","fetchInput","fetchData","addEventListener","attachEvent","chrome","hasPushAndReplaceState","app","runtime","history","pushState","replaceState","oldOnPopState","onpopstate","currentHref","historyReplacementFunction","origHistFunction","consoleMethodCallback","builtin","installer","concat","m","allowSecretKey","port","stackInfo","_processException","frame","_normalizeFrame","in_app","stackInfoUrl","normalized","line","column","function","prefixedMessage","exception","culprit","_trimPacket","Referer","breadcrumbs","_trimBreadcrumbs","urlProp","urlProps","_getHttpData","httpData","userAgent","User-Agent","referrer","_backoffDuration","_backoffStart","_shouldBackoff","_isRepeatData","current","last","_setBackoffState","retry","getResponseHeader","parseInt","baseData","project","platform","serverName","server_name","_sendProcessedPayload","_getUuid","allowDuplicates","event_id","auth","sentry_version","sentry_client","sentry_key","sentry_secret","_makeRequest","opts","evaluatedHeaders","_evaluateHeaders","fetchOptions","ok","XDomainRequest","onload","onerror","open","setRequestHeader","send","setUser","setReleaseContext","getLocationHref","_slice","UNKNOWN_FUNCTION","ERROR_TYPES_RE","notifyHandlers","isWindowError","handlers","inner","traceKitWindowOnError","lineNo","colNo","lastExceptionStack","augmentStackTraceWithInitialElement","processLastException","groups","_oldOnerrorHandler","_lastExceptionStack","_lastArgs","lastArgs","rethrow","incomplete","_onErrorHandlerInstalled","handler","unsubscribe","splice","computeStackTraceFromStackProp","submatch","parts","gecko","winjs","geckoEval","chromeEval","lines","isNative","columnNumber","initial","unshift","partial","computeStackTraceByWalkingCallerChain","depth","item","functionName","funcs","recursion","curr","caller","input","substring","sourceURL","fileName","lineNumber","description","haystack","needle","serializer","replacer","cycleReplacer","keys","thisPos","Infinity","stringifyError","spaces","getSerialize","constructor","logException","pluginOptions","logLevels","levels","pop"],"mappings":"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","file":"main.a088122b02505296027e.js","sourcesContent":["var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 0\n// module chunks = 0","/**\n * Enforces a single instance of the Raven client, and the\n * main entry point for Raven. If you are a consumer of the\n * Raven library, you SHOULD load this file (vs raven.js).\n **/\n\nvar RavenConstructor = require('./raven');\n\n// This is to be defensive in environments where window does not exist (see https://github.com/getsentry/raven-js/pull/785)\nvar _window =\n  typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\nvar _Raven = _window.Raven;\n\nvar Raven = new RavenConstructor();\n\n/*\n * Allow multiple versions of Raven to be installed.\n * Strip Raven from the global context and returns the instance.\n *\n * @return {Raven}\n */\nRaven.noConflict = function() {\n  _window.Raven = _Raven;\n  return Raven;\n};\n\nRaven.afterLoad();\n\nmodule.exports = Raven;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raven-js/src/singleton.js\n// module id = 1\n// module chunks = 0","var _window =\n  typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction isObject(what) {\n  return typeof what === 'object' && what !== null;\n}\n\n// Yanked from https://git.io/vS8DV re-used under CC0\n// with some tiny modifications\nfunction isError(value) {\n  switch ({}.toString.call(value)) {\n    case '[object Error]':\n      return true;\n    case '[object Exception]':\n      return true;\n    case '[object DOMException]':\n      return true;\n    default:\n      return value instanceof Error;\n  }\n}\n\nfunction isErrorEvent(value) {\n  return supportsErrorEvent() && {}.toString.call(value) === '[object ErrorEvent]';\n}\n\nfunction isUndefined(what) {\n  return what === void 0;\n}\n\nfunction isFunction(what) {\n  return typeof what === 'function';\n}\n\nfunction isString(what) {\n  return Object.prototype.toString.call(what) === '[object String]';\n}\n\nfunction isArray(what) {\n  return Object.prototype.toString.call(what) === '[object Array]';\n}\n\nfunction isEmptyObject(what) {\n  for (var _ in what) {\n    if (what.hasOwnProperty(_)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent(''); // eslint-disable-line no-new\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction supportsFetch() {\n  if (!('fetch' in _window)) return false;\n\n  try {\n    new Headers(); // eslint-disable-line no-new\n    new Request(''); // eslint-disable-line no-new\n    new Response(); // eslint-disable-line no-new\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction wrappedCallback(callback) {\n  function dataCallback(data, original) {\n    var normalizedData = callback(data) || data;\n    if (original) {\n      return original(normalizedData) || normalizedData;\n    }\n    return normalizedData;\n  }\n\n  return dataCallback;\n}\n\nfunction each(obj, callback) {\n  var i, j;\n\n  if (isUndefined(obj.length)) {\n    for (i in obj) {\n      if (hasKey(obj, i)) {\n        callback.call(null, i, obj[i]);\n      }\n    }\n  } else {\n    j = obj.length;\n    if (j) {\n      for (i = 0; i < j; i++) {\n        callback.call(null, i, obj[i]);\n      }\n    }\n  }\n}\n\nfunction objectMerge(obj1, obj2) {\n  if (!obj2) {\n    return obj1;\n  }\n  each(obj2, function(key, value) {\n    obj1[key] = value;\n  });\n  return obj1;\n}\n\n/**\n * This function is only used for react-native.\n * react-native freezes object that have already been sent over the\n * js bridge. We need this function in order to check if the object is frozen.\n * So it's ok that objectFrozen returns false if Object.isFrozen is not\n * supported because it's not relevant for other \"platforms\". See related issue:\n * https://github.com/getsentry/react-native-sentry/issues/57\n */\nfunction objectFrozen(obj) {\n  if (!Object.isFrozen) {\n    return false;\n  }\n  return Object.isFrozen(obj);\n}\n\nfunction truncate(str, max) {\n  return !max || str.length <= max ? str : str.substr(0, max) + '\\u2026';\n}\n\n/**\n * hasKey, a better form of hasOwnProperty\n * Example: hasKey(MainHostObject, property) === true/false\n *\n * @param {Object} host object to check property\n * @param {string} key to check\n */\nfunction hasKey(object, key) {\n  return Object.prototype.hasOwnProperty.call(object, key);\n}\n\nfunction joinRegExp(patterns) {\n  // Combine an array of regular expressions and strings into one large regexp\n  // Be mad.\n  var sources = [],\n    i = 0,\n    len = patterns.length,\n    pattern;\n\n  for (; i < len; i++) {\n    pattern = patterns[i];\n    if (isString(pattern)) {\n      // If it's a string, we need to escape it\n      // Taken from: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n      sources.push(pattern.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1'));\n    } else if (pattern && pattern.source) {\n      // If it's a regexp already, we want to extract the source\n      sources.push(pattern.source);\n    }\n    // Intentionally skip other cases\n  }\n  return new RegExp(sources.join('|'), 'i');\n}\n\nfunction urlencode(o) {\n  var pairs = [];\n  each(o, function(key, value) {\n    pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n  });\n  return pairs.join('&');\n}\n\n// borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n// intentionally using regex and not <a/> href parsing trick because React Native and other\n// environments where DOM might not be available\nfunction parseUrl(url) {\n  var match = url.match(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n  if (!match) return {};\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  var query = match[6] || '';\n  var fragment = match[8] || '';\n  return {\n    protocol: match[2],\n    host: match[4],\n    path: match[5],\n    relative: match[5] + query + fragment // everything minus origin\n  };\n}\nfunction uuid4() {\n  var crypto = _window.crypto || _window.msCrypto;\n\n  if (!isUndefined(crypto) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    // eslint-disable-next-line no-undef\n    var arr = new Uint16Array(8);\n    crypto.getRandomValues(arr);\n\n    // set 4 in byte 7\n    arr[3] = (arr[3] & 0xfff) | 0x4000;\n    // set 2 most significant bits of byte 9 to '10'\n    arr[4] = (arr[4] & 0x3fff) | 0x8000;\n\n    var pad = function(num) {\n      var v = num.toString(16);\n      while (v.length < 4) {\n        v = '0' + v;\n      }\n      return v;\n    };\n\n    return (\n      pad(arr[0]) +\n      pad(arr[1]) +\n      pad(arr[2]) +\n      pad(arr[3]) +\n      pad(arr[4]) +\n      pad(arr[5]) +\n      pad(arr[6]) +\n      pad(arr[7])\n    );\n  } else {\n    // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n    return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = (Math.random() * 16) | 0,\n        v = c === 'x' ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n}\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @param elem\n * @returns {string}\n */\nfunction htmlTreeAsString(elem) {\n  /* eslint no-extra-parens:0*/\n  var MAX_TRAVERSE_HEIGHT = 5,\n    MAX_OUTPUT_LEN = 80,\n    out = [],\n    height = 0,\n    len = 0,\n    separator = ' > ',\n    sepLength = separator.length,\n    nextStr;\n\n  while (elem && height++ < MAX_TRAVERSE_HEIGHT) {\n    nextStr = htmlElementAsString(elem);\n    // bail out if\n    // - nextStr is the 'html' element\n    // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n    //   (ignore this limit if we are on the first iteration)\n    if (\n      nextStr === 'html' ||\n      (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)\n    ) {\n      break;\n    }\n\n    out.push(nextStr);\n\n    len += nextStr.length;\n    elem = elem.parentNode;\n  }\n\n  return out.reverse().join(separator);\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @param HTMLElement\n * @returns {string}\n */\nfunction htmlElementAsString(elem) {\n  var out = [],\n    className,\n    classes,\n    key,\n    attr,\n    i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n  if (elem.id) {\n    out.push('#' + elem.id);\n  }\n\n  className = elem.className;\n  if (className && isString(className)) {\n    classes = className.split(/\\s+/);\n    for (i = 0; i < classes.length; i++) {\n      out.push('.' + classes[i]);\n    }\n  }\n  var attrWhitelist = ['type', 'name', 'title', 'alt'];\n  for (i = 0; i < attrWhitelist.length; i++) {\n    key = attrWhitelist[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push('[' + key + '=\"' + attr + '\"]');\n    }\n  }\n  return out.join('');\n}\n\n/**\n * Returns true if either a OR b is truthy, but not both\n */\nfunction isOnlyOneTruthy(a, b) {\n  return !!(!!a ^ !!b);\n}\n\n/**\n * Returns true if both parameters are undefined\n */\nfunction isBothUndefined(a, b) {\n  return isUndefined(a) && isUndefined(b);\n}\n\n/**\n * Returns true if the two input exception interfaces have the same content\n */\nfunction isSameException(ex1, ex2) {\n  if (isOnlyOneTruthy(ex1, ex2)) return false;\n\n  ex1 = ex1.values[0];\n  ex2 = ex2.values[0];\n\n  if (ex1.type !== ex2.type || ex1.value !== ex2.value) return false;\n\n  // in case both stacktraces are undefined, we can't decide so default to false\n  if (isBothUndefined(ex1.stacktrace, ex2.stacktrace)) return false;\n\n  return isSameStacktrace(ex1.stacktrace, ex2.stacktrace);\n}\n\n/**\n * Returns true if the two input stack trace interfaces have the same content\n */\nfunction isSameStacktrace(stack1, stack2) {\n  if (isOnlyOneTruthy(stack1, stack2)) return false;\n\n  var frames1 = stack1.frames;\n  var frames2 = stack2.frames;\n\n  // Exit early if frame count differs\n  if (frames1.length !== frames2.length) return false;\n\n  // Iterate through every frame; bail out if anything differs\n  var a, b;\n  for (var i = 0; i < frames1.length; i++) {\n    a = frames1[i];\n    b = frames2[i];\n    if (\n      a.filename !== b.filename ||\n      a.lineno !== b.lineno ||\n      a.colno !== b.colno ||\n      a['function'] !== b['function']\n    )\n      return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill a method\n * @param obj object e.g. `document`\n * @param name method name present on object e.g. `addEventListener`\n * @param replacement replacement function\n * @param track {optional} record instrumentation to an array\n */\nfunction fill(obj, name, replacement, track) {\n  var orig = obj[name];\n  obj[name] = replacement(orig);\n  obj[name].__raven__ = true;\n  obj[name].__orig__ = orig;\n  if (track) {\n    track.push([obj, name, orig]);\n  }\n}\n\nmodule.exports = {\n  isObject: isObject,\n  isError: isError,\n  isErrorEvent: isErrorEvent,\n  isUndefined: isUndefined,\n  isFunction: isFunction,\n  isString: isString,\n  isArray: isArray,\n  isEmptyObject: isEmptyObject,\n  supportsErrorEvent: supportsErrorEvent,\n  supportsFetch: supportsFetch,\n  wrappedCallback: wrappedCallback,\n  each: each,\n  objectMerge: objectMerge,\n  truncate: truncate,\n  objectFrozen: objectFrozen,\n  hasKey: hasKey,\n  joinRegExp: joinRegExp,\n  urlencode: urlencode,\n  uuid4: uuid4,\n  htmlTreeAsString: htmlTreeAsString,\n  htmlElementAsString: htmlElementAsString,\n  isSameException: isSameException,\n  isSameStacktrace: isSameStacktrace,\n  parseUrl: parseUrl,\n  fill: fill\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raven-js/src/utils.js\n// module id = 2\n// module chunks = 0","var wrapMethod = function(console, level, callback) {\n  var originalConsoleLevel = console[level];\n  var originalConsole = console;\n\n  if (!(level in console)) {\n    return;\n  }\n\n  var sentryLevel = level === 'warn' ? 'warning' : level;\n\n  console[level] = function() {\n    var args = [].slice.call(arguments);\n\n    var msg = '' + args.join(' ');\n    var data = {level: sentryLevel, logger: 'console', extra: {arguments: args}};\n\n    if (level === 'assert') {\n      if (args[0] === false) {\n        // Default browsers message\n        msg = 'Assertion failed: ' + (args.slice(1).join(' ') || 'console.assert');\n        data.extra.arguments = args.slice(1);\n        callback && callback(msg, data);\n      }\n    } else {\n      callback && callback(msg, data);\n    }\n\n    // this fails for some browsers. :(\n    if (originalConsoleLevel) {\n      // IE9 doesn't allow calling apply on console functions directly\n      // See: https://stackoverflow.com/questions/5472938/does-ie9-support-console-log-and-is-it-a-real-function#answer-5473193\n      Function.prototype.apply.call(originalConsoleLevel, originalConsole, args);\n    }\n  };\n};\n\nmodule.exports = {\n  wrapMethod: wrapMethod\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raven-js/src/console.js\n// module id = 3\n// module chunks = 0","import './styles/index.scss';\r\n// import { getUsers, deleteUser } from './api/userApi';\r\nimport Users from './api/userApi'\r\n\r\nimport Raven from 'raven-js';\r\nimport { sentry_url } from '../buildScripts/config';\r\n\r\nRaven.config(sentry_url).install().addPlugin(require('raven-js/plugins/console'));\r\n\r\nconst users = new Users();\r\n\r\nusers.getUsers().then(result => {\r\n  let usersBody = '';\r\n  result.forEach(user => {\r\n    usersBody += `<tr>\r\n    <td><a href=\"#\" data-id=\"${user.id}\" class=\"deleteUser\">Delete</a></td>\r\n    <td>${user.id}</td>\r\n    <td>${user.firstName}</td>\r\n    <td>${user.lastName}</td>\r\n    <td>${user.email}</td>\r\n    </tr>`\r\n  });\r\n  global.document.getElementById('users').innerHTML = usersBody;\r\n\r\n  const deleteLinks = global.document.getElementsByClassName('deleteUser');\r\n\r\n  // Must use array.from to create a real array from a DOM collection\r\n  // Array.from will take second argument which is map function\r\n  // getElementsByClassName only returns an \"array-ish\" object\r\n  Array.from(deleteLinks, link => {\r\n    link.onclick = function(event) {\r\n      const element = event.target;\r\n      event.preventDefault();\r\n      users.deleteUser(element.attributes['data-id'].value);\r\n      const row = element.parentNode.parentNode;\r\n      row.parentNode.removeChild(row);\r\n    };\r\n  });\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/**\r\n * Centralized API Calls (1 Spot)\r\n *\r\n * -Configure all calls\r\n * -Handle pre-loader logic\r\n * -Handle errors\r\n */\r\n\r\nimport getBaseUrl from './baseUrl';\r\n\r\nclass Users {\r\n  constructor() {\r\n    this.baseUrl = getBaseUrl();\r\n  }\r\n\r\n  getUsers() {\r\n    return this.get('users'); // get baseUrl/users\r\n  }\r\n\r\n  deleteUser(id) {\r\n    return this.del(`user/${id}`);\r\n  }\r\n\r\n  get(url) {\r\n    // demo api https://floating-basin-12302.herokuapp.com/users\r\n    return fetch(this.baseUrl + url, {\r\n      headers : {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n       }\r\n    }).then(this.onSuccess, this.onError);\r\n  }\r\n\r\n  // Can't call func delete since reserved word.\r\n  del(url) {\r\n    const request = new Request(this.baseUrl + url, {\r\n      method: 'DELETE'\r\n    });\r\n\r\n    return fetch(request).then(this.onSuccess, this.onError).then((messages) => console.log(`${messages}`)); // eslint-disable-line no-console\r\n  }\r\n\r\n  onSuccess(response) {\r\n    // return response as json or response will return a ReadableStream\r\n    return response.json();\r\n  }\r\n\r\n  onError(error) {\r\n    console.log(error); // eslint-disable-line no-console\r\n  }\r\n}\r\n\r\nexport default Users;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/userApi.js","export default function getBaseUrl() {\r\n  /**\r\n   * http://localhost:3001/ is for dev environment : yarn start P.S if /?useMockApi=true return data json-server /users which is port 3001\r\n   * for more info look at terminal when json server runs\r\n   * https://floating-basin-12302.herokuapp.com/ is for prod environment : yarn run build\r\n   */\r\n  return getQueryStringParameterByName('useMockApi') ? 'http://localhost:3001/' : 'https://floating-basin-12302.herokuapp.com/';\r\n}\r\n\r\nfunction getQueryStringParameterByName(name, url) {\r\n  if (!url) url = window.location.href;\r\n  name = name.replace(/[[\\]]/g, \"\\\\$&\");\r\n  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\r\n      results = regex.exec(url);\r\n  if (!results) return null;\r\n  if (!results[2]) return '';\r\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/baseUrl.js","/*global XDomainRequest:false */\n\nvar TraceKit = require('../vendor/TraceKit/tracekit');\nvar stringify = require('../vendor/json-stringify-safe/stringify');\nvar RavenConfigError = require('./configError');\n\nvar utils = require('./utils');\nvar isError = utils.isError;\nvar isObject = utils.isObject;\nvar isErrorEvent = utils.isErrorEvent;\nvar isUndefined = utils.isUndefined;\nvar isFunction = utils.isFunction;\nvar isString = utils.isString;\nvar isArray = utils.isArray;\nvar isEmptyObject = utils.isEmptyObject;\nvar each = utils.each;\nvar objectMerge = utils.objectMerge;\nvar truncate = utils.truncate;\nvar objectFrozen = utils.objectFrozen;\nvar hasKey = utils.hasKey;\nvar joinRegExp = utils.joinRegExp;\nvar urlencode = utils.urlencode;\nvar uuid4 = utils.uuid4;\nvar htmlTreeAsString = utils.htmlTreeAsString;\nvar isSameException = utils.isSameException;\nvar isSameStacktrace = utils.isSameStacktrace;\nvar parseUrl = utils.parseUrl;\nvar fill = utils.fill;\nvar supportsFetch = utils.supportsFetch;\n\nvar wrapConsoleMethod = require('./console').wrapMethod;\n\nvar dsnKeys = 'source protocol user pass host port path'.split(' '),\n  dsnPattern = /^(?:(\\w+):)?\\/\\/(?:(\\w+)(:\\w+)?@)?([\\w\\.-]+)(?::(\\d+))?(\\/.*)/;\n\nfunction now() {\n  return +new Date();\n}\n\n// This is to be defensive in environments where window does not exist (see https://github.com/getsentry/raven-js/pull/785)\nvar _window =\n  typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\nvar _document = _window.document;\nvar _navigator = _window.navigator;\n\nfunction keepOriginalCallback(original, callback) {\n  return isFunction(callback)\n    ? function(data) {\n        return callback(data, original);\n      }\n    : callback;\n}\n\n// First, check for JSON support\n// If there is no JSON, we no-op the core features of Raven\n// since JSON is required to encode the payload\nfunction Raven() {\n  this._hasJSON = !!(typeof JSON === 'object' && JSON.stringify);\n  // Raven can run in contexts where there's no document (react-native)\n  this._hasDocument = !isUndefined(_document);\n  this._hasNavigator = !isUndefined(_navigator);\n  this._lastCapturedException = null;\n  this._lastData = null;\n  this._lastEventId = null;\n  this._globalServer = null;\n  this._globalKey = null;\n  this._globalProject = null;\n  this._globalContext = {};\n  this._globalOptions = {\n    logger: 'javascript',\n    ignoreErrors: [],\n    ignoreUrls: [],\n    whitelistUrls: [],\n    includePaths: [],\n    headers: null,\n    collectWindowErrors: true,\n    maxMessageLength: 0,\n\n    // By default, truncates URL values to 250 chars\n    maxUrlLength: 250,\n    stackTraceLimit: 50,\n    autoBreadcrumbs: true,\n    instrument: true,\n    sampleRate: 1\n  };\n  this._ignoreOnError = 0;\n  this._isRavenInstalled = false;\n  this._originalErrorStackTraceLimit = Error.stackTraceLimit;\n  // capture references to window.console *and* all its methods first\n  // before the console plugin has a chance to monkey patch\n  this._originalConsole = _window.console || {};\n  this._originalConsoleMethods = {};\n  this._plugins = [];\n  this._startTime = now();\n  this._wrappedBuiltIns = [];\n  this._breadcrumbs = [];\n  this._lastCapturedEvent = null;\n  this._keypressTimeout;\n  this._location = _window.location;\n  this._lastHref = this._location && this._location.href;\n  this._resetBackoff();\n\n  // eslint-disable-next-line guard-for-in\n  for (var method in this._originalConsole) {\n    this._originalConsoleMethods[method] = this._originalConsole[method];\n  }\n}\n\n/*\n * The core Raven singleton\n *\n * @this {Raven}\n */\n\nRaven.prototype = {\n  // Hardcode version string so that raven source can be loaded directly via\n  // webpack (using a build step causes webpack #1617). Grunt verifies that\n  // this value matches package.json during build.\n  //   See: https://github.com/getsentry/raven-js/issues/465\n  VERSION: '3.21.0',\n\n  debug: false,\n\n  TraceKit: TraceKit, // alias to TraceKit\n\n  /*\n     * Configure Raven with a DSN and extra options\n     *\n     * @param {string} dsn The public Sentry DSN\n     * @param {object} options Set of global options [optional]\n     * @return {Raven}\n     */\n  config: function(dsn, options) {\n    var self = this;\n\n    if (self._globalServer) {\n      this._logDebug('error', 'Error: Raven has already been configured');\n      return self;\n    }\n    if (!dsn) return self;\n\n    var globalOptions = self._globalOptions;\n\n    // merge in options\n    if (options) {\n      each(options, function(key, value) {\n        // tags and extra are special and need to be put into context\n        if (key === 'tags' || key === 'extra' || key === 'user') {\n          self._globalContext[key] = value;\n        } else {\n          globalOptions[key] = value;\n        }\n      });\n    }\n\n    self.setDSN(dsn);\n\n    // \"Script error.\" is hard coded into browsers for errors that it can't read.\n    // this is the result of a script being pulled in from an external domain and CORS.\n    globalOptions.ignoreErrors.push(/^Script error\\.?$/);\n    globalOptions.ignoreErrors.push(/^Javascript error: Script error\\.? on line 0$/);\n\n    // join regexp rules into one big rule\n    globalOptions.ignoreErrors = joinRegExp(globalOptions.ignoreErrors);\n    globalOptions.ignoreUrls = globalOptions.ignoreUrls.length\n      ? joinRegExp(globalOptions.ignoreUrls)\n      : false;\n    globalOptions.whitelistUrls = globalOptions.whitelistUrls.length\n      ? joinRegExp(globalOptions.whitelistUrls)\n      : false;\n    globalOptions.includePaths = joinRegExp(globalOptions.includePaths);\n    globalOptions.maxBreadcrumbs = Math.max(\n      0,\n      Math.min(globalOptions.maxBreadcrumbs || 100, 100)\n    ); // default and hard limit is 100\n\n    var autoBreadcrumbDefaults = {\n      xhr: true,\n      console: true,\n      dom: true,\n      location: true,\n      sentry: true\n    };\n\n    var autoBreadcrumbs = globalOptions.autoBreadcrumbs;\n    if ({}.toString.call(autoBreadcrumbs) === '[object Object]') {\n      autoBreadcrumbs = objectMerge(autoBreadcrumbDefaults, autoBreadcrumbs);\n    } else if (autoBreadcrumbs !== false) {\n      autoBreadcrumbs = autoBreadcrumbDefaults;\n    }\n    globalOptions.autoBreadcrumbs = autoBreadcrumbs;\n\n    var instrumentDefaults = {\n      tryCatch: true\n    };\n\n    var instrument = globalOptions.instrument;\n    if ({}.toString.call(instrument) === '[object Object]') {\n      instrument = objectMerge(instrumentDefaults, instrument);\n    } else if (instrument !== false) {\n      instrument = instrumentDefaults;\n    }\n    globalOptions.instrument = instrument;\n\n    TraceKit.collectWindowErrors = !!globalOptions.collectWindowErrors;\n\n    // return for chaining\n    return self;\n  },\n\n  /*\n     * Installs a global window.onerror error handler\n     * to capture and report uncaught exceptions.\n     * At this point, install() is required to be called due\n     * to the way TraceKit is set up.\n     *\n     * @return {Raven}\n     */\n  install: function() {\n    var self = this;\n    if (self.isSetup() && !self._isRavenInstalled) {\n      TraceKit.report.subscribe(function() {\n        self._handleOnErrorStackInfo.apply(self, arguments);\n      });\n\n      self._patchFunctionToString();\n\n      if (self._globalOptions.instrument && self._globalOptions.instrument.tryCatch) {\n        self._instrumentTryCatch();\n      }\n\n      if (self._globalOptions.autoBreadcrumbs) self._instrumentBreadcrumbs();\n\n      // Install all of the plugins\n      self._drainPlugins();\n\n      self._isRavenInstalled = true;\n    }\n\n    Error.stackTraceLimit = self._globalOptions.stackTraceLimit;\n    return this;\n  },\n\n  /*\n     * Set the DSN (can be called multiple time unlike config)\n     *\n     * @param {string} dsn The public Sentry DSN\n     */\n  setDSN: function(dsn) {\n    var self = this,\n      uri = self._parseDSN(dsn),\n      lastSlash = uri.path.lastIndexOf('/'),\n      path = uri.path.substr(1, lastSlash);\n\n    self._dsn = dsn;\n    self._globalKey = uri.user;\n    self._globalSecret = uri.pass && uri.pass.substr(1);\n    self._globalProject = uri.path.substr(lastSlash + 1);\n\n    self._globalServer = self._getGlobalServer(uri);\n\n    self._globalEndpoint =\n      self._globalServer + '/' + path + 'api/' + self._globalProject + '/store/';\n\n    // Reset backoff state since we may be pointing at a\n    // new project/server\n    this._resetBackoff();\n  },\n\n  /*\n     * Wrap code within a context so Raven can capture errors\n     * reliably across domains that is executed immediately.\n     *\n     * @param {object} options A specific set of options for this context [optional]\n     * @param {function} func The callback to be immediately executed within the context\n     * @param {array} args An array of arguments to be called with the callback [optional]\n     */\n  context: function(options, func, args) {\n    if (isFunction(options)) {\n      args = func || [];\n      func = options;\n      options = undefined;\n    }\n\n    return this.wrap(options, func).apply(this, args);\n  },\n\n  /*\n     * Wrap code within a context and returns back a new function to be executed\n     *\n     * @param {object} options A specific set of options for this context [optional]\n     * @param {function} func The function to be wrapped in a new context\n     * @param {function} func A function to call before the try/catch wrapper [optional, private]\n     * @return {function} The newly wrapped functions with a context\n     */\n  wrap: function(options, func, _before) {\n    var self = this;\n    // 1 argument has been passed, and it's not a function\n    // so just return it\n    if (isUndefined(func) && !isFunction(options)) {\n      return options;\n    }\n\n    // options is optional\n    if (isFunction(options)) {\n      func = options;\n      options = undefined;\n    }\n\n    // At this point, we've passed along 2 arguments, and the second one\n    // is not a function either, so we'll just return the second argument.\n    if (!isFunction(func)) {\n      return func;\n    }\n\n    // We don't wanna wrap it twice!\n    try {\n      if (func.__raven__) {\n        return func;\n      }\n\n      // If this has already been wrapped in the past, return that\n      if (func.__raven_wrapper__) {\n        return func.__raven_wrapper__;\n      }\n    } catch (e) {\n      // Just accessing custom props in some Selenium environments\n      // can cause a \"Permission denied\" exception (see raven-js#495).\n      // Bail on wrapping and return the function as-is (defers to window.onerror).\n      return func;\n    }\n\n    function wrapped() {\n      var args = [],\n        i = arguments.length,\n        deep = !options || (options && options.deep !== false);\n\n      if (_before && isFunction(_before)) {\n        _before.apply(this, arguments);\n      }\n\n      // Recursively wrap all of a function's arguments that are\n      // functions themselves.\n      while (i--) args[i] = deep ? self.wrap(options, arguments[i]) : arguments[i];\n\n      try {\n        // Attempt to invoke user-land function\n        // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n        //       means Raven caught an error invoking your application code. This is\n        //       expected behavior and NOT indicative of a bug with Raven.js.\n        return func.apply(this, args);\n      } catch (e) {\n        self._ignoreNextOnError();\n        self.captureException(e, options);\n        throw e;\n      }\n    }\n\n    // copy over properties of the old function\n    for (var property in func) {\n      if (hasKey(func, property)) {\n        wrapped[property] = func[property];\n      }\n    }\n    wrapped.prototype = func.prototype;\n\n    func.__raven_wrapper__ = wrapped;\n    // Signal that this function has been wrapped/filled already\n    // for both debugging and to prevent it to being wrapped/filled twice\n    wrapped.__raven__ = true;\n    wrapped.__orig__ = func;\n\n    return wrapped;\n  },\n\n  /*\n     * Uninstalls the global error handler.\n     *\n     * @return {Raven}\n     */\n  uninstall: function() {\n    TraceKit.report.uninstall();\n\n    this._unpatchFunctionToString();\n    this._restoreBuiltIns();\n\n    Error.stackTraceLimit = this._originalErrorStackTraceLimit;\n    this._isRavenInstalled = false;\n\n    return this;\n  },\n\n  /*\n     * Manually capture an exception and send it over to Sentry\n     *\n     * @param {error} ex An exception to be logged\n     * @param {object} options A specific set of options for this error [optional]\n     * @return {Raven}\n     */\n  captureException: function(ex, options) {\n    // Cases for sending ex as a message, rather than an exception\n    var isNotError = !isError(ex);\n    var isNotErrorEvent = !isErrorEvent(ex);\n    var isErrorEventWithoutError = isErrorEvent(ex) && !ex.error;\n\n    if ((isNotError && isNotErrorEvent) || isErrorEventWithoutError) {\n      return this.captureMessage(\n        ex,\n        objectMerge(\n          {\n            trimHeadFrames: 1,\n            stacktrace: true // if we fall back to captureMessage, default to attempting a new trace\n          },\n          options\n        )\n      );\n    }\n\n    // Get actual Error from ErrorEvent\n    if (isErrorEvent(ex)) ex = ex.error;\n\n    // Store the raw exception object for potential debugging and introspection\n    this._lastCapturedException = ex;\n\n    // TraceKit.report will re-raise any exception passed to it,\n    // which means you have to wrap it in try/catch. Instead, we\n    // can wrap it here and only re-raise if TraceKit.report\n    // raises an exception different from the one we asked to\n    // report on.\n    try {\n      var stack = TraceKit.computeStackTrace(ex);\n      this._handleStackInfo(stack, options);\n    } catch (ex1) {\n      if (ex !== ex1) {\n        throw ex1;\n      }\n    }\n\n    return this;\n  },\n\n  /*\n     * Manually send a message to Sentry\n     *\n     * @param {string} msg A plain message to be captured in Sentry\n     * @param {object} options A specific set of options for this message [optional]\n     * @return {Raven}\n     */\n  captureMessage: function(msg, options) {\n    // config() automagically converts ignoreErrors from a list to a RegExp so we need to test for an\n    // early call; we'll error on the side of logging anything called before configuration since it's\n    // probably something you should see:\n    if (\n      !!this._globalOptions.ignoreErrors.test &&\n      this._globalOptions.ignoreErrors.test(msg)\n    ) {\n      return;\n    }\n\n    options = options || {};\n\n    var data = objectMerge(\n      {\n        message: msg + '' // Make sure it's actually a string\n      },\n      options\n    );\n\n    var ex;\n    // Generate a \"synthetic\" stack trace from this point.\n    // NOTE: If you are a Sentry user, and you are seeing this stack frame, it is NOT indicative\n    //       of a bug with Raven.js. Sentry generates synthetic traces either by configuration,\n    //       or if it catches a thrown object without a \"stack\" property.\n    try {\n      throw new Error(msg);\n    } catch (ex1) {\n      ex = ex1;\n    }\n\n    // null exception name so `Error` isn't prefixed to msg\n    ex.name = null;\n    var stack = TraceKit.computeStackTrace(ex);\n\n    // stack[0] is `throw new Error(msg)` call itself, we are interested in the frame that was just before that, stack[1]\n    var initialCall = isArray(stack.stack) && stack.stack[1];\n    var fileurl = (initialCall && initialCall.url) || '';\n\n    if (\n      !!this._globalOptions.ignoreUrls.test &&\n      this._globalOptions.ignoreUrls.test(fileurl)\n    ) {\n      return;\n    }\n\n    if (\n      !!this._globalOptions.whitelistUrls.test &&\n      !this._globalOptions.whitelistUrls.test(fileurl)\n    ) {\n      return;\n    }\n\n    if (this._globalOptions.stacktrace || (options && options.stacktrace)) {\n      options = objectMerge(\n        {\n          // fingerprint on msg, not stack trace (legacy behavior, could be\n          // revisited)\n          fingerprint: msg,\n          // since we know this is a synthetic trace, the top N-most frames\n          // MUST be from Raven.js, so mark them as in_app later by setting\n          // trimHeadFrames\n          trimHeadFrames: (options.trimHeadFrames || 0) + 1\n        },\n        options\n      );\n\n      var frames = this._prepareFrames(stack, options);\n      data.stacktrace = {\n        // Sentry expects frames oldest to newest\n        frames: frames.reverse()\n      };\n    }\n\n    // Fire away!\n    this._send(data);\n\n    return this;\n  },\n\n  captureBreadcrumb: function(obj) {\n    var crumb = objectMerge(\n      {\n        timestamp: now() / 1000\n      },\n      obj\n    );\n\n    if (isFunction(this._globalOptions.breadcrumbCallback)) {\n      var result = this._globalOptions.breadcrumbCallback(crumb);\n\n      if (isObject(result) && !isEmptyObject(result)) {\n        crumb = result;\n      } else if (result === false) {\n        return this;\n      }\n    }\n\n    this._breadcrumbs.push(crumb);\n    if (this._breadcrumbs.length > this._globalOptions.maxBreadcrumbs) {\n      this._breadcrumbs.shift();\n    }\n    return this;\n  },\n\n  addPlugin: function(plugin /*arg1, arg2, ... argN*/) {\n    var pluginArgs = [].slice.call(arguments, 1);\n\n    this._plugins.push([plugin, pluginArgs]);\n    if (this._isRavenInstalled) {\n      this._drainPlugins();\n    }\n\n    return this;\n  },\n\n  /*\n     * Set/clear a user to be sent along with the payload.\n     *\n     * @param {object} user An object representing user data [optional]\n     * @return {Raven}\n     */\n  setUserContext: function(user) {\n    // Intentionally do not merge here since that's an unexpected behavior.\n    this._globalContext.user = user;\n\n    return this;\n  },\n\n  /*\n     * Merge extra attributes to be sent along with the payload.\n     *\n     * @param {object} extra An object representing extra data [optional]\n     * @return {Raven}\n     */\n  setExtraContext: function(extra) {\n    this._mergeContext('extra', extra);\n\n    return this;\n  },\n\n  /*\n     * Merge tags to be sent along with the payload.\n     *\n     * @param {object} tags An object representing tags [optional]\n     * @return {Raven}\n     */\n  setTagsContext: function(tags) {\n    this._mergeContext('tags', tags);\n\n    return this;\n  },\n\n  /*\n     * Clear all of the context.\n     *\n     * @return {Raven}\n     */\n  clearContext: function() {\n    this._globalContext = {};\n\n    return this;\n  },\n\n  /*\n     * Get a copy of the current context. This cannot be mutated.\n     *\n     * @return {object} copy of context\n     */\n  getContext: function() {\n    // lol javascript\n    return JSON.parse(stringify(this._globalContext));\n  },\n\n  /*\n     * Set environment of application\n     *\n     * @param {string} environment Typically something like 'production'.\n     * @return {Raven}\n     */\n  setEnvironment: function(environment) {\n    this._globalOptions.environment = environment;\n\n    return this;\n  },\n\n  /*\n     * Set release version of application\n     *\n     * @param {string} release Typically something like a git SHA to identify version\n     * @return {Raven}\n     */\n  setRelease: function(release) {\n    this._globalOptions.release = release;\n\n    return this;\n  },\n\n  /*\n     * Set the dataCallback option\n     *\n     * @param {function} callback The callback to run which allows the\n     *                            data blob to be mutated before sending\n     * @return {Raven}\n     */\n  setDataCallback: function(callback) {\n    var original = this._globalOptions.dataCallback;\n    this._globalOptions.dataCallback = keepOriginalCallback(original, callback);\n    return this;\n  },\n\n  /*\n     * Set the breadcrumbCallback option\n     *\n     * @param {function} callback The callback to run which allows filtering\n     *                            or mutating breadcrumbs\n     * @return {Raven}\n     */\n  setBreadcrumbCallback: function(callback) {\n    var original = this._globalOptions.breadcrumbCallback;\n    this._globalOptions.breadcrumbCallback = keepOriginalCallback(original, callback);\n    return this;\n  },\n\n  /*\n     * Set the shouldSendCallback option\n     *\n     * @param {function} callback The callback to run which allows\n     *                            introspecting the blob before sending\n     * @return {Raven}\n     */\n  setShouldSendCallback: function(callback) {\n    var original = this._globalOptions.shouldSendCallback;\n    this._globalOptions.shouldSendCallback = keepOriginalCallback(original, callback);\n    return this;\n  },\n\n  /**\n   * Override the default HTTP transport mechanism that transmits data\n   * to the Sentry server.\n   *\n   * @param {function} transport Function invoked instead of the default\n   *                             `makeRequest` handler.\n   *\n   * @return {Raven}\n   */\n  setTransport: function(transport) {\n    this._globalOptions.transport = transport;\n\n    return this;\n  },\n\n  /*\n     * Get the latest raw exception that was captured by Raven.\n     *\n     * @return {error}\n     */\n  lastException: function() {\n    return this._lastCapturedException;\n  },\n\n  /*\n     * Get the last event id\n     *\n     * @return {string}\n     */\n  lastEventId: function() {\n    return this._lastEventId;\n  },\n\n  /*\n     * Determine if Raven is setup and ready to go.\n     *\n     * @return {boolean}\n     */\n  isSetup: function() {\n    if (!this._hasJSON) return false; // needs JSON support\n    if (!this._globalServer) {\n      if (!this.ravenNotConfiguredError) {\n        this.ravenNotConfiguredError = true;\n        this._logDebug('error', 'Error: Raven has not been configured.');\n      }\n      return false;\n    }\n    return true;\n  },\n\n  afterLoad: function() {\n    // TODO: remove window dependence?\n\n    // Attempt to initialize Raven on load\n    var RavenConfig = _window.RavenConfig;\n    if (RavenConfig) {\n      this.config(RavenConfig.dsn, RavenConfig.config).install();\n    }\n  },\n\n  showReportDialog: function(options) {\n    if (\n      !_document // doesn't work without a document (React native)\n    )\n      return;\n\n    options = options || {};\n\n    var lastEventId = options.eventId || this.lastEventId();\n    if (!lastEventId) {\n      throw new RavenConfigError('Missing eventId');\n    }\n\n    var dsn = options.dsn || this._dsn;\n    if (!dsn) {\n      throw new RavenConfigError('Missing DSN');\n    }\n\n    var encode = encodeURIComponent;\n    var qs = '';\n    qs += '?eventId=' + encode(lastEventId);\n    qs += '&dsn=' + encode(dsn);\n\n    var user = options.user || this._globalContext.user;\n    if (user) {\n      if (user.name) qs += '&name=' + encode(user.name);\n      if (user.email) qs += '&email=' + encode(user.email);\n    }\n\n    var globalServer = this._getGlobalServer(this._parseDSN(dsn));\n\n    var script = _document.createElement('script');\n    script.async = true;\n    script.src = globalServer + '/api/embed/error-page/' + qs;\n    (_document.head || _document.body).appendChild(script);\n  },\n\n  /**** Private functions ****/\n  _ignoreNextOnError: function() {\n    var self = this;\n    this._ignoreOnError += 1;\n    setTimeout(function() {\n      // onerror should trigger before setTimeout\n      self._ignoreOnError -= 1;\n    });\n  },\n\n  _triggerEvent: function(eventType, options) {\n    // NOTE: `event` is a native browser thing, so let's avoid conflicting wiht it\n    var evt, key;\n\n    if (!this._hasDocument) return;\n\n    options = options || {};\n\n    eventType = 'raven' + eventType.substr(0, 1).toUpperCase() + eventType.substr(1);\n\n    if (_document.createEvent) {\n      evt = _document.createEvent('HTMLEvents');\n      evt.initEvent(eventType, true, true);\n    } else {\n      evt = _document.createEventObject();\n      evt.eventType = eventType;\n    }\n\n    for (key in options)\n      if (hasKey(options, key)) {\n        evt[key] = options[key];\n      }\n\n    if (_document.createEvent) {\n      // IE9 if standards\n      _document.dispatchEvent(evt);\n    } else {\n      // IE8 regardless of Quirks or Standards\n      // IE9 if quirks\n      try {\n        _document.fireEvent('on' + evt.eventType.toLowerCase(), evt);\n      } catch (e) {\n        // Do nothing\n      }\n    }\n  },\n\n  /**\n   * Wraps addEventListener to capture UI breadcrumbs\n   * @param evtName the event name (e.g. \"click\")\n   * @returns {Function}\n   * @private\n   */\n  _breadcrumbEventHandler: function(evtName) {\n    var self = this;\n    return function(evt) {\n      // reset keypress timeout; e.g. triggering a 'click' after\n      // a 'keypress' will reset the keypress debounce so that a new\n      // set of keypresses can be recorded\n      self._keypressTimeout = null;\n\n      // It's possible this handler might trigger multiple times for the same\n      // event (e.g. event propagation through node ancestors). Ignore if we've\n      // already captured the event.\n      if (self._lastCapturedEvent === evt) return;\n\n      self._lastCapturedEvent = evt;\n\n      // try/catch both:\n      // - accessing evt.target (see getsentry/raven-js#838, #768)\n      // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n      //   can throw an exception in some circumstances.\n      var target;\n      try {\n        target = htmlTreeAsString(evt.target);\n      } catch (e) {\n        target = '<unknown>';\n      }\n\n      self.captureBreadcrumb({\n        category: 'ui.' + evtName, // e.g. ui.click, ui.input\n        message: target\n      });\n    };\n  },\n\n  /**\n   * Wraps addEventListener to capture keypress UI events\n   * @returns {Function}\n   * @private\n   */\n  _keypressEventHandler: function() {\n    var self = this,\n      debounceDuration = 1000; // milliseconds\n\n    // TODO: if somehow user switches keypress target before\n    //       debounce timeout is triggered, we will only capture\n    //       a single breadcrumb from the FIRST target (acceptable?)\n    return function(evt) {\n      var target;\n      try {\n        target = evt.target;\n      } catch (e) {\n        // just accessing event properties can throw an exception in some rare circumstances\n        // see: https://github.com/getsentry/raven-js/issues/838\n        return;\n      }\n      var tagName = target && target.tagName;\n\n      // only consider keypress events on actual input elements\n      // this will disregard keypresses targeting body (e.g. tabbing\n      // through elements, hotkeys, etc)\n      if (\n        !tagName ||\n        (tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !target.isContentEditable)\n      )\n        return;\n\n      // record first keypress in a series, but ignore subsequent\n      // keypresses until debounce clears\n      var timeout = self._keypressTimeout;\n      if (!timeout) {\n        self._breadcrumbEventHandler('input')(evt);\n      }\n      clearTimeout(timeout);\n      self._keypressTimeout = setTimeout(function() {\n        self._keypressTimeout = null;\n      }, debounceDuration);\n    };\n  },\n\n  /**\n   * Captures a breadcrumb of type \"navigation\", normalizing input URLs\n   * @param to the originating URL\n   * @param from the target URL\n   * @private\n   */\n  _captureUrlChange: function(from, to) {\n    var parsedLoc = parseUrl(this._location.href);\n    var parsedTo = parseUrl(to);\n    var parsedFrom = parseUrl(from);\n\n    // because onpopstate only tells you the \"new\" (to) value of location.href, and\n    // not the previous (from) value, we need to track the value of the current URL\n    // state ourselves\n    this._lastHref = to;\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host)\n      to = parsedTo.relative;\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host)\n      from = parsedFrom.relative;\n\n    this.captureBreadcrumb({\n      category: 'navigation',\n      data: {\n        to: to,\n        from: from\n      }\n    });\n  },\n\n  _patchFunctionToString: function() {\n    var self = this;\n    self._originalFunctionToString = Function.prototype.toString;\n    // eslint-disable-next-line no-extend-native\n    Function.prototype.toString = function() {\n      if (typeof this === 'function' && this.__raven__) {\n        return self._originalFunctionToString.apply(this.__orig__, arguments);\n      }\n      return self._originalFunctionToString.apply(this, arguments);\n    };\n  },\n\n  _unpatchFunctionToString: function() {\n    if (this._originalFunctionToString) {\n      // eslint-disable-next-line no-extend-native\n      Function.prototype.toString = this._originalFunctionToString;\n    }\n  },\n\n  /**\n   * Wrap timer functions and event targets to catch errors and provide\n   * better metadata.\n   */\n  _instrumentTryCatch: function() {\n    var self = this;\n\n    var wrappedBuiltIns = self._wrappedBuiltIns;\n\n    function wrapTimeFn(orig) {\n      return function(fn, t) {\n        // preserve arity\n        // Make a copy of the arguments to prevent deoptimization\n        // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n          args[i] = arguments[i];\n        }\n        var originalCallback = args[0];\n        if (isFunction(originalCallback)) {\n          args[0] = self.wrap(originalCallback);\n        }\n\n        // IE < 9 doesn't support .call/.apply on setInterval/setTimeout, but it\n        // also supports only two arguments and doesn't care what this is, so we\n        // can just call the original function directly.\n        if (orig.apply) {\n          return orig.apply(this, args);\n        } else {\n          return orig(args[0], args[1]);\n        }\n      };\n    }\n\n    var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;\n\n    function wrapEventTarget(global) {\n      var proto = _window[global] && _window[global].prototype;\n      if (proto && proto.hasOwnProperty && proto.hasOwnProperty('addEventListener')) {\n        fill(\n          proto,\n          'addEventListener',\n          function(orig) {\n            return function(evtName, fn, capture, secure) {\n              // preserve arity\n              try {\n                if (fn && fn.handleEvent) {\n                  fn.handleEvent = self.wrap(fn.handleEvent);\n                }\n              } catch (err) {\n                // can sometimes get 'Permission denied to access property \"handle Event'\n              }\n\n              // More breadcrumb DOM capture ... done here and not in `_instrumentBreadcrumbs`\n              // so that we don't have more than one wrapper function\n              var before, clickHandler, keypressHandler;\n\n              if (\n                autoBreadcrumbs &&\n                autoBreadcrumbs.dom &&\n                (global === 'EventTarget' || global === 'Node')\n              ) {\n                // NOTE: generating multiple handlers per addEventListener invocation, should\n                //       revisit and verify we can just use one (almost certainly)\n                clickHandler = self._breadcrumbEventHandler('click');\n                keypressHandler = self._keypressEventHandler();\n                before = function(evt) {\n                  // need to intercept every DOM event in `before` argument, in case that\n                  // same wrapped method is re-used for different events (e.g. mousemove THEN click)\n                  // see #724\n                  if (!evt) return;\n\n                  var eventType;\n                  try {\n                    eventType = evt.type;\n                  } catch (e) {\n                    // just accessing event properties can throw an exception in some rare circumstances\n                    // see: https://github.com/getsentry/raven-js/issues/838\n                    return;\n                  }\n                  if (eventType === 'click') return clickHandler(evt);\n                  else if (eventType === 'keypress') return keypressHandler(evt);\n                };\n              }\n              return orig.call(\n                this,\n                evtName,\n                self.wrap(fn, undefined, before),\n                capture,\n                secure\n              );\n            };\n          },\n          wrappedBuiltIns\n        );\n        fill(\n          proto,\n          'removeEventListener',\n          function(orig) {\n            return function(evt, fn, capture, secure) {\n              try {\n                fn = fn && (fn.__raven_wrapper__ ? fn.__raven_wrapper__ : fn);\n              } catch (e) {\n                // ignore, accessing __raven_wrapper__ will throw in some Selenium environments\n              }\n              return orig.call(this, evt, fn, capture, secure);\n            };\n          },\n          wrappedBuiltIns\n        );\n      }\n    }\n\n    fill(_window, 'setTimeout', wrapTimeFn, wrappedBuiltIns);\n    fill(_window, 'setInterval', wrapTimeFn, wrappedBuiltIns);\n    if (_window.requestAnimationFrame) {\n      fill(\n        _window,\n        'requestAnimationFrame',\n        function(orig) {\n          return function(cb) {\n            return orig(self.wrap(cb));\n          };\n        },\n        wrappedBuiltIns\n      );\n    }\n\n    // event targets borrowed from bugsnag-js:\n    // https://github.com/bugsnag/bugsnag-js/blob/master/src/bugsnag.js#L666\n    var eventTargets = [\n      'EventTarget',\n      'Window',\n      'Node',\n      'ApplicationCache',\n      'AudioTrackList',\n      'ChannelMergerNode',\n      'CryptoOperation',\n      'EventSource',\n      'FileReader',\n      'HTMLUnknownElement',\n      'IDBDatabase',\n      'IDBRequest',\n      'IDBTransaction',\n      'KeyOperation',\n      'MediaController',\n      'MessagePort',\n      'ModalWindow',\n      'Notification',\n      'SVGElementInstance',\n      'Screen',\n      'TextTrack',\n      'TextTrackCue',\n      'TextTrackList',\n      'WebSocket',\n      'WebSocketWorker',\n      'Worker',\n      'XMLHttpRequest',\n      'XMLHttpRequestEventTarget',\n      'XMLHttpRequestUpload'\n    ];\n    for (var i = 0; i < eventTargets.length; i++) {\n      wrapEventTarget(eventTargets[i]);\n    }\n  },\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - XMLHttpRequests\n   *  - DOM interactions (click/typing)\n   *  - window.location changes\n   *  - console\n   *\n   * Can be disabled or individually configured via the `autoBreadcrumbs` config option\n   */\n  _instrumentBreadcrumbs: function() {\n    var self = this;\n    var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;\n\n    var wrappedBuiltIns = self._wrappedBuiltIns;\n\n    function wrapProp(prop, xhr) {\n      if (prop in xhr && isFunction(xhr[prop])) {\n        fill(xhr, prop, function(orig) {\n          return self.wrap(orig);\n        }); // intentionally don't track filled methods on XHR instances\n      }\n    }\n\n    if (autoBreadcrumbs.xhr && 'XMLHttpRequest' in _window) {\n      var xhrproto = XMLHttpRequest.prototype;\n      fill(\n        xhrproto,\n        'open',\n        function(origOpen) {\n          return function(method, url) {\n            // preserve arity\n\n            // if Sentry key appears in URL, don't capture\n            if (isString(url) && url.indexOf(self._globalKey) === -1) {\n              this.__raven_xhr = {\n                method: method,\n                url: url,\n                status_code: null\n              };\n            }\n\n            return origOpen.apply(this, arguments);\n          };\n        },\n        wrappedBuiltIns\n      );\n\n      fill(\n        xhrproto,\n        'send',\n        function(origSend) {\n          return function() {\n            // preserve arity\n            var xhr = this;\n\n            function onreadystatechangeHandler() {\n              if (xhr.__raven_xhr && xhr.readyState === 4) {\n                try {\n                  // touching statusCode in some platforms throws\n                  // an exception\n                  xhr.__raven_xhr.status_code = xhr.status;\n                } catch (e) {\n                  /* do nothing */\n                }\n\n                self.captureBreadcrumb({\n                  type: 'http',\n                  category: 'xhr',\n                  data: xhr.__raven_xhr\n                });\n              }\n            }\n\n            var props = ['onload', 'onerror', 'onprogress'];\n            for (var j = 0; j < props.length; j++) {\n              wrapProp(props[j], xhr);\n            }\n\n            if ('onreadystatechange' in xhr && isFunction(xhr.onreadystatechange)) {\n              fill(\n                xhr,\n                'onreadystatechange',\n                function(orig) {\n                  return self.wrap(orig, undefined, onreadystatechangeHandler);\n                } /* intentionally don't track this instrumentation */\n              );\n            } else {\n              // if onreadystatechange wasn't actually set by the page on this xhr, we\n              // are free to set our own and capture the breadcrumb\n              xhr.onreadystatechange = onreadystatechangeHandler;\n            }\n\n            return origSend.apply(this, arguments);\n          };\n        },\n        wrappedBuiltIns\n      );\n    }\n\n    if (autoBreadcrumbs.xhr && supportsFetch()) {\n      fill(\n        _window,\n        'fetch',\n        function(origFetch) {\n          return function() {\n            // preserve arity\n            // Make a copy of the arguments to prevent deoptimization\n            // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n            var args = new Array(arguments.length);\n            for (var i = 0; i < args.length; ++i) {\n              args[i] = arguments[i];\n            }\n\n            var fetchInput = args[0];\n            var method = 'GET';\n            var url;\n\n            if (typeof fetchInput === 'string') {\n              url = fetchInput;\n            } else if ('Request' in _window && fetchInput instanceof _window.Request) {\n              url = fetchInput.url;\n              if (fetchInput.method) {\n                method = fetchInput.method;\n              }\n            } else {\n              url = '' + fetchInput;\n            }\n\n            // if Sentry key appears in URL, don't capture, as it's our own request\n            if (url.indexOf(self._globalKey) !== -1) {\n              return origFetch.apply(this, args);\n            }\n\n            if (args[1] && args[1].method) {\n              method = args[1].method;\n            }\n\n            var fetchData = {\n              method: method,\n              url: url,\n              status_code: null\n            };\n\n            self.captureBreadcrumb({\n              type: 'http',\n              category: 'fetch',\n              data: fetchData\n            });\n\n            return origFetch.apply(this, args).then(function(response) {\n              fetchData.status_code = response.status;\n\n              return response;\n            });\n          };\n        },\n        wrappedBuiltIns\n      );\n    }\n\n    // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n    // to the document. Do this before we instrument addEventListener.\n    if (autoBreadcrumbs.dom && this._hasDocument) {\n      if (_document.addEventListener) {\n        _document.addEventListener('click', self._breadcrumbEventHandler('click'), false);\n        _document.addEventListener('keypress', self._keypressEventHandler(), false);\n      } else {\n        // IE8 Compatibility\n        _document.attachEvent('onclick', self._breadcrumbEventHandler('click'));\n        _document.attachEvent('onkeypress', self._keypressEventHandler());\n      }\n    }\n\n    // record navigation (URL) changes\n    // NOTE: in Chrome App environment, touching history.pushState, *even inside\n    //       a try/catch block*, will cause Chrome to output an error to console.error\n    // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n    var chrome = _window.chrome;\n    var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    var hasPushAndReplaceState =\n      !isChromePackagedApp &&\n      _window.history &&\n      history.pushState &&\n      history.replaceState;\n    if (autoBreadcrumbs.location && hasPushAndReplaceState) {\n      // TODO: remove onpopstate handler on uninstall()\n      var oldOnPopState = _window.onpopstate;\n      _window.onpopstate = function() {\n        var currentHref = self._location.href;\n        self._captureUrlChange(self._lastHref, currentHref);\n\n        if (oldOnPopState) {\n          return oldOnPopState.apply(this, arguments);\n        }\n      };\n\n      var historyReplacementFunction = function(origHistFunction) {\n        // note history.pushState.length is 0; intentionally not declaring\n        // params to preserve 0 arity\n        return function(/* state, title, url */) {\n          var url = arguments.length > 2 ? arguments[2] : undefined;\n\n          // url argument is optional\n          if (url) {\n            // coerce to string (this is what pushState does)\n            self._captureUrlChange(self._lastHref, url + '');\n          }\n\n          return origHistFunction.apply(this, arguments);\n        };\n      };\n\n      fill(history, 'pushState', historyReplacementFunction, wrappedBuiltIns);\n      fill(history, 'replaceState', historyReplacementFunction, wrappedBuiltIns);\n    }\n\n    if (autoBreadcrumbs.console && 'console' in _window && console.log) {\n      // console\n      var consoleMethodCallback = function(msg, data) {\n        self.captureBreadcrumb({\n          message: msg,\n          level: data.level,\n          category: 'console'\n        });\n      };\n\n      each(['debug', 'info', 'warn', 'error', 'log'], function(_, level) {\n        wrapConsoleMethod(console, level, consoleMethodCallback);\n      });\n    }\n  },\n\n  _restoreBuiltIns: function() {\n    // restore any wrapped builtins\n    var builtin;\n    while (this._wrappedBuiltIns.length) {\n      builtin = this._wrappedBuiltIns.shift();\n\n      var obj = builtin[0],\n        name = builtin[1],\n        orig = builtin[2];\n\n      obj[name] = orig;\n    }\n  },\n\n  _drainPlugins: function() {\n    var self = this;\n\n    // FIX ME TODO\n    each(this._plugins, function(_, plugin) {\n      var installer = plugin[0];\n      var args = plugin[1];\n      installer.apply(self, [self].concat(args));\n    });\n  },\n\n  _parseDSN: function(str) {\n    var m = dsnPattern.exec(str),\n      dsn = {},\n      i = 7;\n\n    try {\n      while (i--) dsn[dsnKeys[i]] = m[i] || '';\n    } catch (e) {\n      throw new RavenConfigError('Invalid DSN: ' + str);\n    }\n\n    if (dsn.pass && !this._globalOptions.allowSecretKey) {\n      throw new RavenConfigError(\n        'Do not specify your secret key in the DSN. See: http://bit.ly/raven-secret-key'\n      );\n    }\n\n    return dsn;\n  },\n\n  _getGlobalServer: function(uri) {\n    // assemble the endpoint from the uri pieces\n    var globalServer = '//' + uri.host + (uri.port ? ':' + uri.port : '');\n\n    if (uri.protocol) {\n      globalServer = uri.protocol + ':' + globalServer;\n    }\n    return globalServer;\n  },\n\n  _handleOnErrorStackInfo: function() {\n    // if we are intentionally ignoring errors via onerror, bail out\n    if (!this._ignoreOnError) {\n      this._handleStackInfo.apply(this, arguments);\n    }\n  },\n\n  _handleStackInfo: function(stackInfo, options) {\n    var frames = this._prepareFrames(stackInfo, options);\n\n    this._triggerEvent('handle', {\n      stackInfo: stackInfo,\n      options: options\n    });\n\n    this._processException(\n      stackInfo.name,\n      stackInfo.message,\n      stackInfo.url,\n      stackInfo.lineno,\n      frames,\n      options\n    );\n  },\n\n  _prepareFrames: function(stackInfo, options) {\n    var self = this;\n    var frames = [];\n    if (stackInfo.stack && stackInfo.stack.length) {\n      each(stackInfo.stack, function(i, stack) {\n        var frame = self._normalizeFrame(stack, stackInfo.url);\n        if (frame) {\n          frames.push(frame);\n        }\n      });\n\n      // e.g. frames captured via captureMessage throw\n      if (options && options.trimHeadFrames) {\n        for (var j = 0; j < options.trimHeadFrames && j < frames.length; j++) {\n          frames[j].in_app = false;\n        }\n      }\n    }\n    frames = frames.slice(0, this._globalOptions.stackTraceLimit);\n    return frames;\n  },\n\n  _normalizeFrame: function(frame, stackInfoUrl) {\n    // normalize the frames data\n    var normalized = {\n      filename: frame.url,\n      lineno: frame.line,\n      colno: frame.column,\n      function: frame.func || '?'\n    };\n\n    // Case when we don't have any information about the error\n    // E.g. throwing a string or raw object, instead of an `Error` in Firefox\n    // Generating synthetic error doesn't add any value here\n    //\n    // We should probably somehow let a user know that they should fix their code\n    if (!frame.url) {\n      normalized.filename = stackInfoUrl; // fallback to whole stacks url from onerror handler\n    }\n\n    normalized.in_app = !// determine if an exception came from outside of our app\n    // first we check the global includePaths list.\n    (\n      (!!this._globalOptions.includePaths.test &&\n        !this._globalOptions.includePaths.test(normalized.filename)) ||\n      // Now we check for fun, if the function name is Raven or TraceKit\n      /(Raven|TraceKit)\\./.test(normalized['function']) ||\n      // finally, we do a last ditch effort and check for raven.min.js\n      /raven\\.(min\\.)?js$/.test(normalized.filename)\n    );\n\n    return normalized;\n  },\n\n  _processException: function(type, message, fileurl, lineno, frames, options) {\n    var prefixedMessage = (type ? type + ': ' : '') + (message || '');\n    if (\n      !!this._globalOptions.ignoreErrors.test &&\n      (this._globalOptions.ignoreErrors.test(message) ||\n        this._globalOptions.ignoreErrors.test(prefixedMessage))\n    ) {\n      return;\n    }\n\n    var stacktrace;\n\n    if (frames && frames.length) {\n      fileurl = frames[0].filename || fileurl;\n      // Sentry expects frames oldest to newest\n      // and JS sends them as newest to oldest\n      frames.reverse();\n      stacktrace = {frames: frames};\n    } else if (fileurl) {\n      stacktrace = {\n        frames: [\n          {\n            filename: fileurl,\n            lineno: lineno,\n            in_app: true\n          }\n        ]\n      };\n    }\n\n    if (\n      !!this._globalOptions.ignoreUrls.test &&\n      this._globalOptions.ignoreUrls.test(fileurl)\n    ) {\n      return;\n    }\n\n    if (\n      !!this._globalOptions.whitelistUrls.test &&\n      !this._globalOptions.whitelistUrls.test(fileurl)\n    ) {\n      return;\n    }\n\n    var data = objectMerge(\n      {\n        // sentry.interfaces.Exception\n        exception: {\n          values: [\n            {\n              type: type,\n              value: message,\n              stacktrace: stacktrace\n            }\n          ]\n        },\n        culprit: fileurl\n      },\n      options\n    );\n\n    // Fire away!\n    this._send(data);\n  },\n\n  _trimPacket: function(data) {\n    // For now, we only want to truncate the two different messages\n    // but this could/should be expanded to just trim everything\n    var max = this._globalOptions.maxMessageLength;\n    if (data.message) {\n      data.message = truncate(data.message, max);\n    }\n    if (data.exception) {\n      var exception = data.exception.values[0];\n      exception.value = truncate(exception.value, max);\n    }\n\n    var request = data.request;\n    if (request) {\n      if (request.url) {\n        request.url = truncate(request.url, this._globalOptions.maxUrlLength);\n      }\n      if (request.Referer) {\n        request.Referer = truncate(request.Referer, this._globalOptions.maxUrlLength);\n      }\n    }\n\n    if (data.breadcrumbs && data.breadcrumbs.values)\n      this._trimBreadcrumbs(data.breadcrumbs);\n\n    return data;\n  },\n\n  /**\n   * Truncate breadcrumb values (right now just URLs)\n   */\n  _trimBreadcrumbs: function(breadcrumbs) {\n    // known breadcrumb properties with urls\n    // TODO: also consider arbitrary prop values that start with (https?)?://\n    var urlProps = ['to', 'from', 'url'],\n      urlProp,\n      crumb,\n      data;\n\n    for (var i = 0; i < breadcrumbs.values.length; ++i) {\n      crumb = breadcrumbs.values[i];\n      if (\n        !crumb.hasOwnProperty('data') ||\n        !isObject(crumb.data) ||\n        objectFrozen(crumb.data)\n      )\n        continue;\n\n      data = objectMerge({}, crumb.data);\n      for (var j = 0; j < urlProps.length; ++j) {\n        urlProp = urlProps[j];\n        if (data.hasOwnProperty(urlProp) && data[urlProp]) {\n          data[urlProp] = truncate(data[urlProp], this._globalOptions.maxUrlLength);\n        }\n      }\n      breadcrumbs.values[i].data = data;\n    }\n  },\n\n  _getHttpData: function() {\n    if (!this._hasNavigator && !this._hasDocument) return;\n    var httpData = {};\n\n    if (this._hasNavigator && _navigator.userAgent) {\n      httpData.headers = {\n        'User-Agent': navigator.userAgent\n      };\n    }\n\n    if (this._hasDocument) {\n      if (_document.location && _document.location.href) {\n        httpData.url = _document.location.href;\n      }\n      if (_document.referrer) {\n        if (!httpData.headers) httpData.headers = {};\n        httpData.headers.Referer = _document.referrer;\n      }\n    }\n\n    return httpData;\n  },\n\n  _resetBackoff: function() {\n    this._backoffDuration = 0;\n    this._backoffStart = null;\n  },\n\n  _shouldBackoff: function() {\n    return this._backoffDuration && now() - this._backoffStart < this._backoffDuration;\n  },\n\n  /**\n   * Returns true if the in-process data payload matches the signature\n   * of the previously-sent data\n   *\n   * NOTE: This has to be done at this level because TraceKit can generate\n   *       data from window.onerror WITHOUT an exception object (IE8, IE9,\n   *       other old browsers). This can take the form of an \"exception\"\n   *       data object with a single frame (derived from the onerror args).\n   */\n  _isRepeatData: function(current) {\n    var last = this._lastData;\n\n    if (\n      !last ||\n      current.message !== last.message || // defined for captureMessage\n      current.culprit !== last.culprit // defined for captureException/onerror\n    )\n      return false;\n\n    // Stacktrace interface (i.e. from captureMessage)\n    if (current.stacktrace || last.stacktrace) {\n      return isSameStacktrace(current.stacktrace, last.stacktrace);\n    } else if (current.exception || last.exception) {\n      // Exception interface (i.e. from captureException/onerror)\n      return isSameException(current.exception, last.exception);\n    }\n\n    return true;\n  },\n\n  _setBackoffState: function(request) {\n    // If we are already in a backoff state, don't change anything\n    if (this._shouldBackoff()) {\n      return;\n    }\n\n    var status = request.status;\n\n    // 400 - project_id doesn't exist or some other fatal\n    // 401 - invalid/revoked dsn\n    // 429 - too many requests\n    if (!(status === 400 || status === 401 || status === 429)) return;\n\n    var retry;\n    try {\n      // If Retry-After is not in Access-Control-Expose-Headers, most\n      // browsers will throw an exception trying to access it\n      if (supportsFetch()) {\n        retry = request.headers.get('Retry-After');\n      } else {\n        retry = request.getResponseHeader('Retry-After');\n      }\n\n      // Retry-After is returned in seconds\n      retry = parseInt(retry, 10) * 1000;\n    } catch (e) {\n      /* eslint no-empty:0 */\n    }\n\n    this._backoffDuration = retry\n      ? // If Sentry server returned a Retry-After value, use it\n        retry\n      : // Otherwise, double the last backoff duration (starts at 1 sec)\n        this._backoffDuration * 2 || 1000;\n\n    this._backoffStart = now();\n  },\n\n  _send: function(data) {\n    var globalOptions = this._globalOptions;\n\n    var baseData = {\n        project: this._globalProject,\n        logger: globalOptions.logger,\n        platform: 'javascript'\n      },\n      httpData = this._getHttpData();\n\n    if (httpData) {\n      baseData.request = httpData;\n    }\n\n    // HACK: delete `trimHeadFrames` to prevent from appearing in outbound payload\n    if (data.trimHeadFrames) delete data.trimHeadFrames;\n\n    data = objectMerge(baseData, data);\n\n    // Merge in the tags and extra separately since objectMerge doesn't handle a deep merge\n    data.tags = objectMerge(objectMerge({}, this._globalContext.tags), data.tags);\n    data.extra = objectMerge(objectMerge({}, this._globalContext.extra), data.extra);\n\n    // Send along our own collected metadata with extra\n    data.extra['session:duration'] = now() - this._startTime;\n\n    if (this._breadcrumbs && this._breadcrumbs.length > 0) {\n      // intentionally make shallow copy so that additions\n      // to breadcrumbs aren't accidentally sent in this request\n      data.breadcrumbs = {\n        values: [].slice.call(this._breadcrumbs, 0)\n      };\n    }\n\n    // If there are no tags/extra, strip the key from the payload alltogther.\n    if (isEmptyObject(data.tags)) delete data.tags;\n\n    if (this._globalContext.user) {\n      // sentry.interfaces.User\n      data.user = this._globalContext.user;\n    }\n\n    // Include the environment if it's defined in globalOptions\n    if (globalOptions.environment) data.environment = globalOptions.environment;\n\n    // Include the release if it's defined in globalOptions\n    if (globalOptions.release) data.release = globalOptions.release;\n\n    // Include server_name if it's defined in globalOptions\n    if (globalOptions.serverName) data.server_name = globalOptions.serverName;\n\n    if (isFunction(globalOptions.dataCallback)) {\n      data = globalOptions.dataCallback(data) || data;\n    }\n\n    // Why??????????\n    if (!data || isEmptyObject(data)) {\n      return;\n    }\n\n    // Check if the request should be filtered or not\n    if (\n      isFunction(globalOptions.shouldSendCallback) &&\n      !globalOptions.shouldSendCallback(data)\n    ) {\n      return;\n    }\n\n    // Backoff state: Sentry server previously responded w/ an error (e.g. 429 - too many requests),\n    // so drop requests until \"cool-off\" period has elapsed.\n    if (this._shouldBackoff()) {\n      this._logDebug('warn', 'Raven dropped error due to backoff: ', data);\n      return;\n    }\n\n    if (typeof globalOptions.sampleRate === 'number') {\n      if (Math.random() < globalOptions.sampleRate) {\n        this._sendProcessedPayload(data);\n      }\n    } else {\n      this._sendProcessedPayload(data);\n    }\n  },\n\n  _getUuid: function() {\n    return uuid4();\n  },\n\n  _sendProcessedPayload: function(data, callback) {\n    var self = this;\n    var globalOptions = this._globalOptions;\n\n    if (!this.isSetup()) return;\n\n    // Try and clean up the packet before sending by truncating long values\n    data = this._trimPacket(data);\n\n    // ideally duplicate error testing should occur *before* dataCallback/shouldSendCallback,\n    // but this would require copying an un-truncated copy of the data packet, which can be\n    // arbitrarily deep (extra_data) -- could be worthwhile? will revisit\n    if (!this._globalOptions.allowDuplicates && this._isRepeatData(data)) {\n      this._logDebug('warn', 'Raven dropped repeat event: ', data);\n      return;\n    }\n\n    // Send along an event_id if not explicitly passed.\n    // This event_id can be used to reference the error within Sentry itself.\n    // Set lastEventId after we know the error should actually be sent\n    this._lastEventId = data.event_id || (data.event_id = this._getUuid());\n\n    // Store outbound payload after trim\n    this._lastData = data;\n\n    this._logDebug('debug', 'Raven about to send:', data);\n\n    var auth = {\n      sentry_version: '7',\n      sentry_client: 'raven-js/' + this.VERSION,\n      sentry_key: this._globalKey\n    };\n\n    if (this._globalSecret) {\n      auth.sentry_secret = this._globalSecret;\n    }\n\n    var exception = data.exception && data.exception.values[0];\n\n    // only capture 'sentry' breadcrumb is autoBreadcrumbs is truthy\n    if (\n      this._globalOptions.autoBreadcrumbs &&\n      this._globalOptions.autoBreadcrumbs.sentry\n    ) {\n      this.captureBreadcrumb({\n        category: 'sentry',\n        message: exception\n          ? (exception.type ? exception.type + ': ' : '') + exception.value\n          : data.message,\n        event_id: data.event_id,\n        level: data.level || 'error' // presume error unless specified\n      });\n    }\n\n    var url = this._globalEndpoint;\n    (globalOptions.transport || this._makeRequest).call(this, {\n      url: url,\n      auth: auth,\n      data: data,\n      options: globalOptions,\n      onSuccess: function success() {\n        self._resetBackoff();\n\n        self._triggerEvent('success', {\n          data: data,\n          src: url\n        });\n        callback && callback();\n      },\n      onError: function failure(error) {\n        self._logDebug('error', 'Raven transport failed to send: ', error);\n\n        if (error.request) {\n          self._setBackoffState(error.request);\n        }\n\n        self._triggerEvent('failure', {\n          data: data,\n          src: url\n        });\n        error = error || new Error('Raven send failed (no additional details provided)');\n        callback && callback(error);\n      }\n    });\n  },\n\n  _makeRequest: function(opts) {\n    // Auth is intentionally sent as part of query string (NOT as custom HTTP header) to avoid preflight CORS requests\n    var url = opts.url + '?' + urlencode(opts.auth);\n\n    var evaluatedHeaders = null;\n    if (opts.options.headers) {\n      evaluatedHeaders = this._evaluateHeaders(opts.options.headers);\n    }\n\n    if (supportsFetch()) {\n      var fetchOptions = {\n        method: 'POST',\n        body: stringify(opts.data)\n      };\n\n      if (evaluatedHeaders) {\n        fetchOptions.headers = evaluatedHeaders;\n      }\n\n      return _window\n        .fetch(url, fetchOptions)\n        .then(function(response) {\n          if (response.ok) {\n            opts.onSuccess && opts.onSuccess();\n          } else {\n            var error = new Error('Sentry error code: ' + response.status);\n            // It's called request only to keep compatibility with XHR interface\n            // and not add more redundant checks in setBackoffState method\n            error.request = response;\n            opts.onError && opts.onError(error);\n          }\n        })\n        ['catch'](function() {\n          opts.onError &&\n            opts.onError(new Error('Sentry error code: network unavailable'));\n        });\n    }\n\n    var request = _window.XMLHttpRequest && new _window.XMLHttpRequest();\n    if (!request) return;\n\n    // if browser doesn't support CORS (e.g. IE7), we are out of luck\n    var hasCORS = 'withCredentials' in request || typeof XDomainRequest !== 'undefined';\n\n    if (!hasCORS) return;\n\n    if ('withCredentials' in request) {\n      request.onreadystatechange = function() {\n        if (request.readyState !== 4) {\n          return;\n        } else if (request.status === 200) {\n          opts.onSuccess && opts.onSuccess();\n        } else if (opts.onError) {\n          var err = new Error('Sentry error code: ' + request.status);\n          err.request = request;\n          opts.onError(err);\n        }\n      };\n    } else {\n      request = new XDomainRequest();\n      // xdomainrequest cannot go http -> https (or vice versa),\n      // so always use protocol relative\n      url = url.replace(/^https?:/, '');\n\n      // onreadystatechange not supported by XDomainRequest\n      if (opts.onSuccess) {\n        request.onload = opts.onSuccess;\n      }\n      if (opts.onError) {\n        request.onerror = function() {\n          var err = new Error('Sentry error code: XDomainRequest');\n          err.request = request;\n          opts.onError(err);\n        };\n      }\n    }\n\n    request.open('POST', url);\n\n    if (evaluatedHeaders) {\n      each(evaluatedHeaders, function(key, value) {\n        request.setRequestHeader(key, value);\n      });\n    }\n\n    request.send(stringify(opts.data));\n  },\n\n  _evaluateHeaders: function(headers) {\n    var evaluatedHeaders = {};\n\n    for (var key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        var value = headers[key];\n        evaluatedHeaders[key] = typeof value === 'function' ? value() : value;\n      }\n    }\n\n    return evaluatedHeaders;\n  },\n\n  _logDebug: function(level) {\n    if (this._originalConsoleMethods[level] && this.debug) {\n      // In IE<10 console methods do not have their own 'apply' method\n      Function.prototype.apply.call(\n        this._originalConsoleMethods[level],\n        this._originalConsole,\n        [].slice.call(arguments, 1)\n      );\n    }\n  },\n\n  _mergeContext: function(key, context) {\n    if (isUndefined(context)) {\n      delete this._globalContext[key];\n    } else {\n      this._globalContext[key] = objectMerge(this._globalContext[key] || {}, context);\n    }\n  }\n};\n\n// Deprecations\nRaven.prototype.setUser = Raven.prototype.setUserContext;\nRaven.prototype.setReleaseContext = Raven.prototype.setRelease;\n\nmodule.exports = Raven;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raven-js/src/raven.js\n// module id = 10\n// module chunks = 0","var utils = require('../../src/utils');\n\n/*\n TraceKit - Cross brower stack traces\n\n This was originally forked from github.com/occ/TraceKit, but has since been\n largely re-written and is now maintained as part of raven-js.  Tests for\n this are in test/vendor.\n\n MIT license\n*/\n\nvar TraceKit = {\n  collectWindowErrors: true,\n  debug: false\n};\n\n// This is to be defensive in environments where window does not exist (see https://github.com/getsentry/raven-js/pull/785)\nvar _window =\n  typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n// global reference to slice\nvar _slice = [].slice;\nvar UNKNOWN_FUNCTION = '?';\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Error_types\nvar ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/;\n\nfunction getLocationHref() {\n  if (typeof document === 'undefined' || document.location == null) return '';\n\n  return document.location.href;\n}\n\n/**\n * TraceKit.report: cross-browser processing of unhandled exceptions\n *\n * Syntax:\n *   TraceKit.report.subscribe(function(stackInfo) { ... })\n *   TraceKit.report.unsubscribe(function(stackInfo) { ... })\n *   TraceKit.report(exception)\n *   try { ...code... } catch(ex) { TraceKit.report(ex); }\n *\n * Supports:\n *   - Firefox: full stack trace with line numbers, plus column number\n *              on top frame; column number is not guaranteed\n *   - Opera:   full stack trace with line and column numbers\n *   - Chrome:  full stack trace with line and column numbers\n *   - Safari:  line and column number for the top frame only; some frames\n *              may be missing, and column number is not guaranteed\n *   - IE:      line and column number for the top frame only; some frames\n *              may be missing, and column number is not guaranteed\n *\n * In theory, TraceKit should work on all of the following versions:\n *   - IE5.5+ (only 8.0 tested)\n *   - Firefox 0.9+ (only 3.5+ tested)\n *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require\n *     Exceptions Have Stacktrace to be enabled in opera:config)\n *   - Safari 3+ (only 4+ tested)\n *   - Chrome 1+ (only 5+ tested)\n *   - Konqueror 3.5+ (untested)\n *\n * Requires TraceKit.computeStackTrace.\n *\n * Tries to catch all unhandled exceptions and report them to the\n * subscribed handlers. Please note that TraceKit.report will rethrow the\n * exception. This is REQUIRED in order to get a useful stack trace in IE.\n * If the exception does not reach the top of the browser, you will only\n * get a stack trace from the point where TraceKit.report was called.\n *\n * Handlers receive a stackInfo object as described in the\n * TraceKit.computeStackTrace docs.\n */\nTraceKit.report = (function reportModuleWrapper() {\n  var handlers = [],\n    lastArgs = null,\n    lastException = null,\n    lastExceptionStack = null;\n\n  /**\n     * Add a crash handler.\n     * @param {Function} handler\n     */\n  function subscribe(handler) {\n    installGlobalHandler();\n    handlers.push(handler);\n  }\n\n  /**\n     * Remove a crash handler.\n     * @param {Function} handler\n     */\n  function unsubscribe(handler) {\n    for (var i = handlers.length - 1; i >= 0; --i) {\n      if (handlers[i] === handler) {\n        handlers.splice(i, 1);\n      }\n    }\n  }\n\n  /**\n     * Remove all crash handlers.\n     */\n  function unsubscribeAll() {\n    uninstallGlobalHandler();\n    handlers = [];\n  }\n\n  /**\n     * Dispatch stack information to all handlers.\n     * @param {Object.<string, *>} stack\n     */\n  function notifyHandlers(stack, isWindowError) {\n    var exception = null;\n    if (isWindowError && !TraceKit.collectWindowErrors) {\n      return;\n    }\n    for (var i in handlers) {\n      if (handlers.hasOwnProperty(i)) {\n        try {\n          handlers[i].apply(null, [stack].concat(_slice.call(arguments, 2)));\n        } catch (inner) {\n          exception = inner;\n        }\n      }\n    }\n\n    if (exception) {\n      throw exception;\n    }\n  }\n\n  var _oldOnerrorHandler, _onErrorHandlerInstalled;\n\n  /**\n     * Ensures all global unhandled exceptions are recorded.\n     * Supported by Gecko and IE.\n     * @param {string} msg Error message.\n     * @param {string} url URL of script that generated the exception.\n     * @param {(number|string)} lineNo The line number at which the error\n     * occurred.\n     * @param {?(number|string)} colNo The column number at which the error\n     * occurred.\n     * @param {?Error} ex The actual Error object.\n     */\n  function traceKitWindowOnError(msg, url, lineNo, colNo, ex) {\n    var stack = null;\n    // If 'ex' is ErrorEvent, get real Error from inside\n    var exception = utils.isErrorEvent(ex) ? ex.error : ex;\n    // If 'msg' is ErrorEvent, get real message from inside\n    var message = utils.isErrorEvent(msg) ? msg.message : msg;\n\n    if (lastExceptionStack) {\n      TraceKit.computeStackTrace.augmentStackTraceWithInitialElement(\n        lastExceptionStack,\n        url,\n        lineNo,\n        message\n      );\n      processLastException();\n    } else if (exception && utils.isError(exception)) {\n      // non-string `exception` arg; attempt to extract stack trace\n\n      // New chrome and blink send along a real error object\n      // Let's just report that like a normal error.\n      // See: https://mikewest.org/2013/08/debugging-runtime-errors-with-window-onerror\n      stack = TraceKit.computeStackTrace(exception);\n      notifyHandlers(stack, true);\n    } else {\n      var location = {\n        url: url,\n        line: lineNo,\n        column: colNo\n      };\n\n      var name = undefined;\n      var groups;\n\n      if ({}.toString.call(message) === '[object String]') {\n        var groups = message.match(ERROR_TYPES_RE);\n        if (groups) {\n          name = groups[1];\n          message = groups[2];\n        }\n      }\n\n      location.func = UNKNOWN_FUNCTION;\n\n      stack = {\n        name: name,\n        message: message,\n        url: getLocationHref(),\n        stack: [location]\n      };\n      notifyHandlers(stack, true);\n    }\n\n    if (_oldOnerrorHandler) {\n      return _oldOnerrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  }\n\n  function installGlobalHandler() {\n    if (_onErrorHandlerInstalled) {\n      return;\n    }\n    _oldOnerrorHandler = _window.onerror;\n    _window.onerror = traceKitWindowOnError;\n    _onErrorHandlerInstalled = true;\n  }\n\n  function uninstallGlobalHandler() {\n    if (!_onErrorHandlerInstalled) {\n      return;\n    }\n    _window.onerror = _oldOnerrorHandler;\n    _onErrorHandlerInstalled = false;\n    _oldOnerrorHandler = undefined;\n  }\n\n  function processLastException() {\n    var _lastExceptionStack = lastExceptionStack,\n      _lastArgs = lastArgs;\n    lastArgs = null;\n    lastExceptionStack = null;\n    lastException = null;\n    notifyHandlers.apply(null, [_lastExceptionStack, false].concat(_lastArgs));\n  }\n\n  /**\n     * Reports an unhandled Error to TraceKit.\n     * @param {Error} ex\n     * @param {?boolean} rethrow If false, do not re-throw the exception.\n     * Only used for window.onerror to not cause an infinite loop of\n     * rethrowing.\n     */\n  function report(ex, rethrow) {\n    var args = _slice.call(arguments, 1);\n    if (lastExceptionStack) {\n      if (lastException === ex) {\n        return; // already caught by an inner catch block, ignore\n      } else {\n        processLastException();\n      }\n    }\n\n    var stack = TraceKit.computeStackTrace(ex);\n    lastExceptionStack = stack;\n    lastException = ex;\n    lastArgs = args;\n\n    // If the stack trace is incomplete, wait for 2 seconds for\n    // slow slow IE to see if onerror occurs or not before reporting\n    // this exception; otherwise, we will end up with an incomplete\n    // stack trace\n    setTimeout(function() {\n      if (lastException === ex) {\n        processLastException();\n      }\n    }, stack.incomplete ? 2000 : 0);\n\n    if (rethrow !== false) {\n      throw ex; // re-throw to propagate to the top level (and cause window.onerror)\n    }\n  }\n\n  report.subscribe = subscribe;\n  report.unsubscribe = unsubscribe;\n  report.uninstall = unsubscribeAll;\n  return report;\n})();\n\n/**\n * TraceKit.computeStackTrace: cross-browser stack traces in JavaScript\n *\n * Syntax:\n *   s = TraceKit.computeStackTrace(exception) // consider using TraceKit.report instead (see below)\n * Returns:\n *   s.name              - exception name\n *   s.message           - exception message\n *   s.stack[i].url      - JavaScript or HTML file URL\n *   s.stack[i].func     - function name, or empty for anonymous functions (if guessing did not work)\n *   s.stack[i].args     - arguments passed to the function, if known\n *   s.stack[i].line     - line number, if known\n *   s.stack[i].column   - column number, if known\n *\n * Supports:\n *   - Firefox:  full stack trace with line numbers and unreliable column\n *               number on top frame\n *   - Opera 10: full stack trace with line and column numbers\n *   - Opera 9-: full stack trace with line numbers\n *   - Chrome:   full stack trace with line and column numbers\n *   - Safari:   line and column number for the topmost stacktrace element\n *               only\n *   - IE:       no line numbers whatsoever\n *\n * Tries to guess names of anonymous functions by looking for assignments\n * in the source code. In IE and Safari, we have to guess source file names\n * by searching for function bodies inside all page scripts. This will not\n * work for scripts that are loaded cross-domain.\n * Here be dragons: some function names may be guessed incorrectly, and\n * duplicate functions may be mismatched.\n *\n * TraceKit.computeStackTrace should only be used for tracing purposes.\n * Logging of unhandled exceptions should be done with TraceKit.report,\n * which builds on top of TraceKit.computeStackTrace and provides better\n * IE support by utilizing the window.onerror event to retrieve information\n * about the top of the stack.\n *\n * Note: In IE and Safari, no stack trace is recorded on the Error object,\n * so computeStackTrace instead walks its *own* chain of callers.\n * This means that:\n *  * in Safari, some methods may be missing from the stack trace;\n *  * in IE, the topmost function in the stack trace will always be the\n *    caller of computeStackTrace.\n *\n * This is okay for tracing (because you are likely to be calling\n * computeStackTrace from the function you want to be the topmost element\n * of the stack trace anyway), but not okay for logging unhandled\n * exceptions (because your catch block will likely be far away from the\n * inner function that actually caused the exception).\n *\n */\nTraceKit.computeStackTrace = (function computeStackTraceWrapper() {\n  // Contents of Exception in various browsers.\n  //\n  // SAFARI:\n  // ex.message = Can't find variable: qq\n  // ex.line = 59\n  // ex.sourceId = 580238192\n  // ex.sourceURL = http://...\n  // ex.expressionBeginOffset = 96\n  // ex.expressionCaretOffset = 98\n  // ex.expressionEndOffset = 98\n  // ex.name = ReferenceError\n  //\n  // FIREFOX:\n  // ex.message = qq is not defined\n  // ex.fileName = http://...\n  // ex.lineNumber = 59\n  // ex.columnNumber = 69\n  // ex.stack = ...stack trace... (see the example below)\n  // ex.name = ReferenceError\n  //\n  // CHROME:\n  // ex.message = qq is not defined\n  // ex.name = ReferenceError\n  // ex.type = not_defined\n  // ex.arguments = ['aa']\n  // ex.stack = ...stack trace...\n  //\n  // INTERNET EXPLORER:\n  // ex.message = ...\n  // ex.name = ReferenceError\n  //\n  // OPERA:\n  // ex.message = ...message... (see the example below)\n  // ex.name = ReferenceError\n  // ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)\n  // ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'\n\n  /**\n     * Computes stack trace information from the stack property.\n     * Chrome and Gecko use this property.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n  function computeStackTraceFromStackProp(ex) {\n    if (typeof ex.stack === 'undefined' || !ex.stack) return;\n\n    var chrome = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|[a-z]:|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i,\n      gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i,\n      winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\n      // Used to additionally parse URL/line/column from eval frames\n      geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i,\n      chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/,\n      lines = ex.stack.split('\\n'),\n      stack = [],\n      submatch,\n      parts,\n      element,\n      reference = /^(.*) is undefined$/.exec(ex.message);\n\n    for (var i = 0, j = lines.length; i < j; ++i) {\n      if ((parts = chrome.exec(lines[i]))) {\n        var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n        var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n        if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n          // throw out eval line/column and use top-most line/column number\n          parts[2] = submatch[1]; // url\n          parts[3] = submatch[2]; // line\n          parts[4] = submatch[3]; // column\n        }\n        element = {\n          url: !isNative ? parts[2] : null,\n          func: parts[1] || UNKNOWN_FUNCTION,\n          args: isNative ? [parts[2]] : [],\n          line: parts[3] ? +parts[3] : null,\n          column: parts[4] ? +parts[4] : null\n        };\n      } else if ((parts = winjs.exec(lines[i]))) {\n        element = {\n          url: parts[2],\n          func: parts[1] || UNKNOWN_FUNCTION,\n          args: [],\n          line: +parts[3],\n          column: parts[4] ? +parts[4] : null\n        };\n      } else if ((parts = gecko.exec(lines[i]))) {\n        var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n        if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n          // throw out eval line/column and use top-most line number\n          parts[3] = submatch[1];\n          parts[4] = submatch[2];\n          parts[5] = null; // no column when eval\n        } else if (i === 0 && !parts[5] && typeof ex.columnNumber !== 'undefined') {\n          // FireFox uses this awesome columnNumber property for its top frame\n          // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n          // so adding 1\n          // NOTE: this hack doesn't work if top-most frame is eval\n          stack[0].column = ex.columnNumber + 1;\n        }\n        element = {\n          url: parts[3],\n          func: parts[1] || UNKNOWN_FUNCTION,\n          args: parts[2] ? parts[2].split(',') : [],\n          line: parts[4] ? +parts[4] : null,\n          column: parts[5] ? +parts[5] : null\n        };\n      } else {\n        continue;\n      }\n\n      if (!element.func && element.line) {\n        element.func = UNKNOWN_FUNCTION;\n      }\n\n      stack.push(element);\n    }\n\n    if (!stack.length) {\n      return null;\n    }\n\n    return {\n      name: ex.name,\n      message: ex.message,\n      url: getLocationHref(),\n      stack: stack\n    };\n  }\n\n  /**\n     * Adds information about the first frame to incomplete stack traces.\n     * Safari and IE require this to get complete data on the first frame.\n     * @param {Object.<string, *>} stackInfo Stack trace information from\n     * one of the compute* methods.\n     * @param {string} url The URL of the script that caused an error.\n     * @param {(number|string)} lineNo The line number of the script that\n     * caused an error.\n     * @param {string=} message The error generated by the browser, which\n     * hopefully contains the name of the object that caused the error.\n     * @return {boolean} Whether or not the stack information was\n     * augmented.\n     */\n  function augmentStackTraceWithInitialElement(stackInfo, url, lineNo, message) {\n    var initial = {\n      url: url,\n      line: lineNo\n    };\n\n    if (initial.url && initial.line) {\n      stackInfo.incomplete = false;\n\n      if (!initial.func) {\n        initial.func = UNKNOWN_FUNCTION;\n      }\n\n      if (stackInfo.stack.length > 0) {\n        if (stackInfo.stack[0].url === initial.url) {\n          if (stackInfo.stack[0].line === initial.line) {\n            return false; // already in stack trace\n          } else if (\n            !stackInfo.stack[0].line &&\n            stackInfo.stack[0].func === initial.func\n          ) {\n            stackInfo.stack[0].line = initial.line;\n            return false;\n          }\n        }\n      }\n\n      stackInfo.stack.unshift(initial);\n      stackInfo.partial = true;\n      return true;\n    } else {\n      stackInfo.incomplete = true;\n    }\n\n    return false;\n  }\n\n  /**\n     * Computes stack trace information by walking the arguments.caller\n     * chain at the time the exception occurred. This will cause earlier\n     * frames to be missed but is the only way to get any stack trace in\n     * Safari and IE. The top frame is restored by\n     * {@link augmentStackTraceWithInitialElement}.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n  function computeStackTraceByWalkingCallerChain(ex, depth) {\n    var functionName = /function\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)?\\s*\\(/i,\n      stack = [],\n      funcs = {},\n      recursion = false,\n      parts,\n      item,\n      source;\n\n    for (\n      var curr = computeStackTraceByWalkingCallerChain.caller;\n      curr && !recursion;\n      curr = curr.caller\n    ) {\n      if (curr === computeStackTrace || curr === TraceKit.report) {\n        // console.log('skipping internal function');\n        continue;\n      }\n\n      item = {\n        url: null,\n        func: UNKNOWN_FUNCTION,\n        line: null,\n        column: null\n      };\n\n      if (curr.name) {\n        item.func = curr.name;\n      } else if ((parts = functionName.exec(curr.toString()))) {\n        item.func = parts[1];\n      }\n\n      if (typeof item.func === 'undefined') {\n        try {\n          item.func = parts.input.substring(0, parts.input.indexOf('{'));\n        } catch (e) {}\n      }\n\n      if (funcs['' + curr]) {\n        recursion = true;\n      } else {\n        funcs['' + curr] = true;\n      }\n\n      stack.push(item);\n    }\n\n    if (depth) {\n      // console.log('depth is ' + depth);\n      // console.log('stack is ' + stack.length);\n      stack.splice(0, depth);\n    }\n\n    var result = {\n      name: ex.name,\n      message: ex.message,\n      url: getLocationHref(),\n      stack: stack\n    };\n    augmentStackTraceWithInitialElement(\n      result,\n      ex.sourceURL || ex.fileName,\n      ex.line || ex.lineNumber,\n      ex.message || ex.description\n    );\n    return result;\n  }\n\n  /**\n     * Computes a stack trace for an exception.\n     * @param {Error} ex\n     * @param {(string|number)=} depth\n     */\n  function computeStackTrace(ex, depth) {\n    var stack = null;\n    depth = depth == null ? 0 : +depth;\n\n    try {\n      stack = computeStackTraceFromStackProp(ex);\n      if (stack) {\n        return stack;\n      }\n    } catch (e) {\n      if (TraceKit.debug) {\n        throw e;\n      }\n    }\n\n    try {\n      stack = computeStackTraceByWalkingCallerChain(ex, depth + 1);\n      if (stack) {\n        return stack;\n      }\n    } catch (e) {\n      if (TraceKit.debug) {\n        throw e;\n      }\n    }\n    return {\n      name: ex.name,\n      message: ex.message,\n      url: getLocationHref()\n    };\n  }\n\n  computeStackTrace.augmentStackTraceWithInitialElement = augmentStackTraceWithInitialElement;\n  computeStackTrace.computeStackTraceFromStackProp = computeStackTraceFromStackProp;\n\n  return computeStackTrace;\n})();\n\nmodule.exports = TraceKit;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raven-js/vendor/TraceKit/tracekit.js\n// module id = 11\n// module chunks = 0","/*\n json-stringify-safe\n Like JSON.stringify, but doesn't throw on circular references.\n\n Originally forked from https://github.com/isaacs/json-stringify-safe\n version 5.0.1 on 3/8/2017 and modified to handle Errors serialization\n and IE8 compatibility. Tests for this are in test/vendor.\n\n ISC license: https://github.com/isaacs/json-stringify-safe/blob/master/LICENSE\n*/\n\nexports = module.exports = stringify;\nexports.getSerialize = serializer;\n\nfunction indexOf(haystack, needle) {\n  for (var i = 0; i < haystack.length; ++i) {\n    if (haystack[i] === needle) return i;\n  }\n  return -1;\n}\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces);\n}\n\n// https://github.com/ftlabs/js-abbreviate/blob/fa709e5f139e7770a71827b1893f22418097fbda/index.js#L95-L106\nfunction stringifyError(value) {\n  var err = {\n    // These properties are implemented as magical getters and don't show up in for in\n    stack: value.stack,\n    message: value.message,\n    name: value.name\n  };\n\n  for (var i in value) {\n    if (Object.prototype.hasOwnProperty.call(value, i)) {\n      err[i] = value[i];\n    }\n  }\n\n  return err;\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [];\n  var keys = [];\n\n  if (cycleReplacer == null) {\n    cycleReplacer = function(key, value) {\n      if (stack[0] === value) {\n        return '[Circular ~]';\n      }\n      return '[Circular ~.' + keys.slice(0, indexOf(stack, value)).join('.') + ']';\n    };\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = indexOf(stack, this);\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this);\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key);\n\n      if (~indexOf(stack, value)) {\n        value = cycleReplacer.call(this, key, value);\n      }\n    } else {\n      stack.push(value);\n    }\n\n    return replacer == null\n      ? value instanceof Error ? stringifyError(value) : value\n      : replacer.call(this, key, value);\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raven-js/vendor/json-stringify-safe/stringify.js\n// module id = 12\n// module chunks = 0","function RavenConfigError(message) {\n  this.name = 'RavenConfigError';\n  this.message = message;\n}\nRavenConfigError.prototype = new Error();\nRavenConfigError.prototype.constructor = RavenConfigError;\n\nmodule.exports = RavenConfigError;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raven-js/src/configError.js\n// module id = 13\n// module chunks = 0","import Raven from 'raven-js';\r\n\r\nconst sentry_key = '29fdcccc13fc41a8a78b53ac8f4e4c8b';\r\nconst sentry_app = '267363';\r\n\r\nexport const sentry_url = `https://${sentry_key}@sentry.io/${sentry_app}`;\r\n\r\nexport function logException(ex, context) {\r\n  Raven.captureException(ex, {\r\n    extra: context\r\n  });\r\n\r\n  window && window.console && console.error && console.error(ex); // eslint-disable-line no-console\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./buildScripts/config.js","/**\n * console plugin\n *\n * Monkey patches console.* calls into Sentry messages with\n * their appropriate log levels. (Experimental)\n *\n * Options:\n *\n *   `levels`: An array of levels (methods on `console`) to report to Sentry.\n *     Defaults to debug, info, warn, and error.\n */\nvar wrapConsoleMethod = require('../src/console').wrapMethod;\n\nfunction consolePlugin(Raven, console, pluginOptions) {\n  console = console || window.console || {};\n  pluginOptions = pluginOptions || {};\n\n  var logLevels = pluginOptions.levels || ['debug', 'info', 'warn', 'error'];\n  if ('assert' in console) logLevels.push('assert');\n\n  var callback = function(msg, data) {\n    Raven.captureMessage(msg, data);\n  };\n\n  var level = logLevels.pop();\n  while (level) {\n    wrapConsoleMethod(console, level, callback);\n    level = logLevels.pop();\n  }\n}\n\nmodule.exports = consolePlugin;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raven-js/plugins/console.js\n// module id = 15\n// module chunks = 0"],"sourceRoot":""}